<!DOCTYPE html>
<html lang="en">
  <head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <title></title>
    <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
    <link href="../../../_static/bootstrap/css/bootstrap.css" rel="stylesheet">
    <style>
      body {
        padding-top: 60px; /* 60px to make the container go all the way to the bottom of the topbar */
      }
    </style>
    <link href="../../../_static/bootstrap/css/bootstrap-responsive.min.css" rel="stylesheet">
    <link href="../../../_static/nanodoc.css" rel="stylesheet">
  </head>
  <body>
    <div class="navbar navbar-fixed-top">
      <div class="navbar-inner">
        <div class="container">
          <a class="btn btn-navbar" data-target=".nav-collapse" data-toggle="collapse">
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </a>
          <a class="brand" href="../../../">static</a>
        </div>
      </div>
    </div>
    <div class="container-fluid">
      <div class="row-fluid">
        <div class="span12">
          <ul class="breadcrumb">
            <li>
              <a href="../../../">static</a>
              <span class="divider">/</span>
            </li>
            <li>
              <a href="../../">bootstrap</a>
              <span class="divider">/</span>
            </li>
            <li>
              <a href="../">js</a>
              <span class="divider">/</span>
            </li>
            <li class="active">bootstrap.min.js</li>
          </ul>
        </div>
      </div>
      <div class="row-fluid">
        <div class="span2 well well-small">
          <ul class="nav nav-list">
            <li>
              <a href="../bootstrap.js/">
                <i class="icon-file"></i>
                bootstrap.js
              </a>
            </li>
            <li class="active">
              <i class="icon-hand-right"></i>
              <b>bootstrap.min.js</b>
            </li>
          </ul>
        </div>
        <div class="span10">
          <table class="table">
            <tbody>
              <tr id="line-1">
                <td colspan="2">
                  <div class="pilwrap">
                    <a class="pilcrow" href="#line-1">
                      1
                      ¶
                    </a>
                  </div>
                  <ul>
                    <li>Bootstrap.js by @fat &amp; @mdo</li>
                    <li>Copyright 2012 Twitter, Inc.</li>
                    <li>http://www.apache.org/licenses/LICENSE-2.0.txt
                  */</li>
                  </ul>
                </td>
              </tr>
              <tr id="line-2">
                <td colspan="1">
                  <div class="pilwrap">
                    <a class="pilcrow" href="#line-2">
                      2
                      ¶
                    </a>
                  </div>
                  
                </td>
                <td class="code"><pre><span class="o">!</span><span class="kd">function</span>(e){<span class="s2">"use strict"</span>;e(<span class="kd">function</span>(){e.support.transition<span class="o">=</span><span class="kd">function</span>(){<span class="kd">var</span> e<span class="o">=</span><span class="kd">function</span>(){<span class="kd">var</span> e<span class="o">=</span><span class="nb">document</span>.createElement(<span class="s2">"bootstrap"</span>),t<span class="o">=</span>{WebkitTransition<span class="o">:</span><span class="s2">"webkitTransitionEnd"</span>,MozTransition<span class="o">:</span><span class="s2">"transitionend"</span>,OTransition<span class="o">:</span><span class="s2">"oTransitionEnd otransitionend"</span>,transition<span class="o">:</span><span class="s2">"transitionend"</span>},n;<span class="k">for</span>(n <span class="k">in</span> t)<span class="k">if</span>(e.style[n]<span class="o">!==</span><span class="kc">undefined</span>)<span class="k">return</span> t[n]}();<span class="k">return</span> e<span class="o">&amp;&amp;</span>{end<span class="o">:</span>e}}()})}(<span class="nb">window</span>.jQuery),<span class="o">!</span><span class="kd">function</span>(e){<span class="s2">"use strict"</span>;<span class="kd">var</span> t<span class="o">=</span><span class="s1">'[data-dismiss="alert"]'</span>,n<span class="o">=</span><span class="kd">function</span>(n){e(n).on(<span class="s2">"click"</span>,t,<span class="k">this</span>.close)};n.prototype.close<span class="o">=</span><span class="kd">function</span>(t){<span class="kd">function</span> s(){i.trigger(<span class="s2">"closed"</span>).remove()}<span class="kd">var</span> n<span class="o">=</span>e(<span class="k">this</span>),r<span class="o">=</span>n.attr(<span class="s2">"data-target"</span>),i;r<span class="o">||</span>(r<span class="o">=</span>n.attr(<span class="s2">"href"</span>),r<span class="o">=</span>r<span class="o">&amp;&amp;</span>r.replace(<span class="sr">/.*(?=#[^\s]*$)/</span>,<span class="s2">""</span>)),i<span class="o">=</span>e(r),t<span class="o">&amp;&amp;</span>t.preventDefault(),i.length<span class="o">||</span>(i<span class="o">=</span>n.hasClass(<span class="s2">"alert"</span>)<span class="o">?</span>n<span class="o">:</span>n.parent()),i.trigger(t<span class="o">=</span>e.Event(<span class="s2">"close"</span>));<span class="k">if</span>(t.isDefaultPrevented())<span class="k">return</span>;i.removeClass(<span class="s2">"in"</span>),e.support.transition<span class="o">&amp;&amp;</span>i.hasClass(<span class="s2">"fade"</span>)<span class="o">?</span>i.on(e.support.transition.end,s)<span class="o">:</span>s()};<span class="kd">var</span> r<span class="o">=</span>e.fn.alert;e.fn.alert<span class="o">=</span><span class="kd">function</span>(t){<span class="k">return</span> <span class="k">this</span>.each(<span class="kd">function</span>(){<span class="kd">var</span> r<span class="o">=</span>e(<span class="k">this</span>),i<span class="o">=</span>r.data(<span class="s2">"alert"</span>);i<span class="o">||</span>r.data(<span class="s2">"alert"</span>,i<span class="o">=</span><span class="k">new</span> n(<span class="k">this</span>)),<span class="k">typeof</span> t<span class="o">==</span><span class="s2">"string"</span><span class="o">&amp;&amp;</span>i[t].call(r)})},e.fn.alert.Constructor<span class="o">=</span>n,e.fn.alert.noConflict<span class="o">=</span><span class="kd">function</span>(){<span class="k">return</span> e.fn.alert<span class="o">=</span>r,<span class="k">this</span>},e(<span class="nb">document</span>).on(<span class="s2">"click.alert.data-api"</span>,t,n.prototype.close)}(<span class="nb">window</span>.jQuery),<span class="o">!</span><span class="kd">function</span>(e){<span class="s2">"use strict"</span>;<span class="kd">var</span> t<span class="o">=</span><span class="kd">function</span>(t,n){<span class="k">this</span>.$element<span class="o">=</span>e(t),<span class="k">this</span>.options<span class="o">=</span>e.extend({},e.fn.button.defaults,n)};t.prototype.setState<span class="o">=</span><span class="kd">function</span>(e){<span class="kd">var</span> t<span class="o">=</span><span class="s2">"disabled"</span>,n<span class="o">=</span><span class="k">this</span>.$element,r<span class="o">=</span>n.data(),i<span class="o">=</span>n.is(<span class="s2">"input"</span>)<span class="o">?</span><span class="s2">"val"</span><span class="o">:</span><span class="s2">"html"</span>;e<span class="o">+=</span><span class="s2">"Text"</span>,r.resetText<span class="o">||</span>n.data(<span class="s2">"resetText"</span>,n[i]()),n[i](r[e]<span class="o">||</span><span class="k">this</span>.options[e]),setTimeout(<span class="kd">function</span>(){e<span class="o">==</span><span class="s2">"loadingText"</span><span class="o">?</span>n.addClass(t).attr(t,t)<span class="o">:</span>n.removeClass(t).removeAttr(t)},<span class="mi">0</span>)},t.prototype.toggle<span class="o">=</span><span class="kd">function</span>(){<span class="kd">var</span> e<span class="o">=</span><span class="k">this</span>.$element.closest(<span class="s1">'[data-toggle="buttons-radio"]'</span>);e<span class="o">&amp;&amp;</span>e.find(<span class="s2">".active"</span>).removeClass(<span class="s2">"active"</span>),<span class="k">this</span>.$element.toggleClass(<span class="s2">"active"</span>)};<span class="kd">var</span> n<span class="o">=</span>e.fn.button;e.fn.button<span class="o">=</span><span class="kd">function</span>(n){<span class="k">return</span> <span class="k">this</span>.each(<span class="kd">function</span>(){<span class="kd">var</span> r<span class="o">=</span>e(<span class="k">this</span>),i<span class="o">=</span>r.data(<span class="s2">"button"</span>),s<span class="o">=</span><span class="k">typeof</span> n<span class="o">==</span><span class="s2">"object"</span><span class="o">&amp;&amp;</span>n;i<span class="o">||</span>r.data(<span class="s2">"button"</span>,i<span class="o">=</span><span class="k">new</span> t(<span class="k">this</span>,s)),n<span class="o">==</span><span class="s2">"toggle"</span><span class="o">?</span>i.toggle()<span class="o">:</span>n<span class="o">&amp;&amp;</span>i.setState(n)})},e.fn.button.defaults<span class="o">=</span>{loadingText<span class="o">:</span><span class="s2">"loading..."</span>},e.fn.button.Constructor<span class="o">=</span>t,e.fn.button.noConflict<span class="o">=</span><span class="kd">function</span>(){<span class="k">return</span> e.fn.button<span class="o">=</span>n,<span class="k">this</span>},e(<span class="nb">document</span>).on(<span class="s2">"click.button.data-api"</span>,<span class="s2">"[data-toggle^=button]"</span>,<span class="kd">function</span>(t){<span class="kd">var</span> n<span class="o">=</span>e(t.target);n.hasClass(<span class="s2">"btn"</span>)<span class="o">||</span>(n<span class="o">=</span>n.closest(<span class="s2">".btn"</span>)),n.button(<span class="s2">"toggle"</span>)})}(<span class="nb">window</span>.jQuery),<span class="o">!</span><span class="kd">function</span>(e){<span class="s2">"use strict"</span>;<span class="kd">var</span> t<span class="o">=</span><span class="kd">function</span>(t,n){<span class="k">this</span>.$element<span class="o">=</span>e(t),<span class="k">this</span>.$indicators<span class="o">=</span><span class="k">this</span>.$element.find(<span class="s2">".carousel-indicators"</span>),<span class="k">this</span>.options<span class="o">=</span>n,<span class="k">this</span>.options.pause<span class="o">==</span><span class="s2">"hover"</span><span class="o">&amp;&amp;</span><span class="k">this</span>.$element.on(<span class="s2">"mouseenter"</span>,e.proxy(<span class="k">this</span>.pause,<span class="k">this</span>)).on(<span class="s2">"mouseleave"</span>,e.proxy(<span class="k">this</span>.cycle,<span class="k">this</span>))};t.prototype<span class="o">=</span>{cycle<span class="o">:</span><span class="kd">function</span>(t){<span class="k">return</span> t<span class="o">||</span>(<span class="k">this</span>.paused<span class="o">=</span><span class="o">!</span><span class="mi">1</span>),<span class="k">this</span>.interval<span class="o">&amp;&amp;</span>clearInterval(<span class="k">this</span>.interval),<span class="k">this</span>.options.interval<span class="o">&amp;&amp;</span><span class="o">!</span><span class="k">this</span>.paused<span class="o">&amp;&amp;</span>(<span class="k">this</span>.interval<span class="o">=</span>setInterval(e.proxy(<span class="k">this</span>.next,<span class="k">this</span>),<span class="k">this</span>.options.interval)),<span class="k">this</span>},getActiveIndex<span class="o">:</span><span class="kd">function</span>(){<span class="k">return</span> <span class="k">this</span>.$active<span class="o">=</span><span class="k">this</span>.$element.find(<span class="s2">".item.active"</span>),<span class="k">this</span>.$items<span class="o">=</span><span class="k">this</span>.$active.parent().children(),<span class="k">this</span>.$items.index(<span class="k">this</span>.$active)},to<span class="o">:</span><span class="kd">function</span>(t){<span class="kd">var</span> n<span class="o">=</span><span class="k">this</span>.getActiveIndex(),r<span class="o">=</span><span class="k">this</span>;<span class="k">if</span>(t<span class="o">&gt;</span><span class="k">this</span>.$items.length<span class="o">-</span><span class="mi">1</span><span class="o">||</span>t<span class="o">&lt;</span><span class="mi">0</span>)<span class="k">return</span>;<span class="k">return</span> <span class="k">this</span>.sliding<span class="o">?</span><span class="k">this</span>.$element.one(<span class="s2">"slid"</span>,<span class="kd">function</span>(){r.to(t)})<span class="o">:</span>n<span class="o">==</span>t<span class="o">?</span><span class="k">this</span>.pause().cycle()<span class="o">:</span><span class="k">this</span>.slide(t<span class="o">&gt;</span>n<span class="o">?</span><span class="s2">"next"</span><span class="o">:</span><span class="s2">"prev"</span>,e(<span class="k">this</span>.$items[t]))},pause<span class="o">:</span><span class="kd">function</span>(t){<span class="k">return</span> t<span class="o">||</span>(<span class="k">this</span>.paused<span class="o">=</span><span class="o">!</span><span class="mi">0</span>),<span class="k">this</span>.$element.find(<span class="s2">".next, .prev"</span>).length<span class="o">&amp;&amp;</span>e.support.transition.end<span class="o">&amp;&amp;</span>(<span class="k">this</span>.$element.trigger(e.support.transition.end),<span class="k">this</span>.cycle(<span class="o">!</span><span class="mi">0</span>)),clearInterval(<span class="k">this</span>.interval),<span class="k">this</span>.interval<span class="o">=</span><span class="kc">null</span>,<span class="k">this</span>},next<span class="o">:</span><span class="kd">function</span>(){<span class="k">if</span>(<span class="k">this</span>.sliding)<span class="k">return</span>;<span class="k">return</span> <span class="k">this</span>.slide(<span class="s2">"next"</span>)},prev<span class="o">:</span><span class="kd">function</span>(){<span class="k">if</span>(<span class="k">this</span>.sliding)<span class="k">return</span>;<span class="k">return</span> <span class="k">this</span>.slide(<span class="s2">"prev"</span>)},slide<span class="o">:</span><span class="kd">function</span>(t,n){<span class="kd">var</span> r<span class="o">=</span><span class="k">this</span>.$element.find(<span class="s2">".item.active"</span>),i<span class="o">=</span>n<span class="o">||</span>r[t](),s<span class="o">=</span><span class="k">this</span>.interval,o<span class="o">=</span>t<span class="o">==</span><span class="s2">"next"</span><span class="o">?</span><span class="s2">"left"</span><span class="o">:</span><span class="s2">"right"</span>,u<span class="o">=</span>t<span class="o">==</span><span class="s2">"next"</span><span class="o">?</span><span class="s2">"first"</span><span class="o">:</span><span class="s2">"last"</span>,a<span class="o">=</span><span class="k">this</span>,f;<span class="k">this</span>.sliding<span class="o">=</span><span class="o">!</span><span class="mi">0</span>,s<span class="o">&amp;&amp;</span><span class="k">this</span>.pause(),i<span class="o">=</span>i.length<span class="o">?</span>i<span class="o">:</span><span class="k">this</span>.$element.find(<span class="s2">".item"</span>)[u](),f<span class="o">=</span>e.Event(<span class="s2">"slide"</span>,{relatedTarget<span class="o">:</span>i[<span class="mi">0</span>],direction<span class="o">:</span>o});<span class="k">if</span>(i.hasClass(<span class="s2">"active"</span>))<span class="k">return</span>;<span class="k">this</span>.$indicators.length<span class="o">&amp;&amp;</span>(<span class="k">this</span>.$indicators.find(<span class="s2">".active"</span>).removeClass(<span class="s2">"active"</span>),<span class="k">this</span>.$element.one(<span class="s2">"slid"</span>,<span class="kd">function</span>(){<span class="kd">var</span> t<span class="o">=</span>e(a.$indicators.children()[a.getActiveIndex()]);t<span class="o">&amp;&amp;</span>t.addClass(<span class="s2">"active"</span>)}));<span class="k">if</span>(e.support.transition<span class="o">&amp;&amp;</span><span class="k">this</span>.$element.hasClass(<span class="s2">"slide"</span>)){<span class="k">this</span>.$element.trigger(f);<span class="k">if</span>(f.isDefaultPrevented())<span class="k">return</span>;i.addClass(t),i[<span class="mi">0</span>].offsetWidth,r.addClass(o),i.addClass(o),<span class="k">this</span>.$element.one(e.support.transition.end,<span class="kd">function</span>(){i.removeClass([t,o].join(<span class="s2">" "</span>)).addClass(<span class="s2">"active"</span>),r.removeClass([<span class="s2">"active"</span>,o].join(<span class="s2">" "</span>)),a.sliding<span class="o">=</span><span class="o">!</span><span class="mi">1</span>,setTimeout(<span class="kd">function</span>(){a.$element.trigger(<span class="s2">"slid"</span>)},<span class="mi">0</span>)})}<span class="k">else</span>{<span class="k">this</span>.$element.trigger(f);<span class="k">if</span>(f.isDefaultPrevented())<span class="k">return</span>;r.removeClass(<span class="s2">"active"</span>),i.addClass(<span class="s2">"active"</span>),<span class="k">this</span>.sliding<span class="o">=</span><span class="o">!</span><span class="mi">1</span>,<span class="k">this</span>.$element.trigger(<span class="s2">"slid"</span>)}<span class="k">return</span> s<span class="o">&amp;&amp;</span><span class="k">this</span>.cycle(),<span class="k">this</span>}};<span class="kd">var</span> n<span class="o">=</span>e.fn.carousel;e.fn.carousel<span class="o">=</span><span class="kd">function</span>(n){<span class="k">return</span> <span class="k">this</span>.each(<span class="kd">function</span>(){<span class="kd">var</span> r<span class="o">=</span>e(<span class="k">this</span>),i<span class="o">=</span>r.data(<span class="s2">"carousel"</span>),s<span class="o">=</span>e.extend({},e.fn.carousel.defaults,<span class="k">typeof</span> n<span class="o">==</span><span class="s2">"object"</span><span class="o">&amp;&amp;</span>n),o<span class="o">=</span><span class="k">typeof</span> n<span class="o">==</span><span class="s2">"string"</span><span class="o">?</span>n<span class="o">:</span>s.slide;i<span class="o">||</span>r.data(<span class="s2">"carousel"</span>,i<span class="o">=</span><span class="k">new</span> t(<span class="k">this</span>,s)),<span class="k">typeof</span> n<span class="o">==</span><span class="s2">"number"</span><span class="o">?</span>i.to(n)<span class="o">:</span>o<span class="o">?</span>i[o]()<span class="o">:</span>s.interval<span class="o">&amp;&amp;</span>i.pause().cycle()})},e.fn.carousel.defaults<span class="o">=</span>{interval<span class="o">:</span><span class="mi">5</span>e3,pause<span class="o">:</span><span class="s2">"hover"</span>},e.fn.carousel.Constructor<span class="o">=</span>t,e.fn.carousel.noConflict<span class="o">=</span><span class="kd">function</span>(){<span class="k">return</span> e.fn.carousel<span class="o">=</span>n,<span class="k">this</span>},e(<span class="nb">document</span>).on(<span class="s2">"click.carousel.data-api"</span>,<span class="s2">"[data-slide], [data-slide-to]"</span>,<span class="kd">function</span>(t){<span class="kd">var</span> n<span class="o">=</span>e(<span class="k">this</span>),r,i<span class="o">=</span>e(n.attr(<span class="s2">"data-target"</span>)<span class="o">||</span>(r<span class="o">=</span>n.attr(<span class="s2">"href"</span>))<span class="o">&amp;&amp;</span>r.replace(<span class="sr">/.*(?=#[^\s]+$)/</span>,<span class="s2">""</span>)),s<span class="o">=</span>e.extend({},i.data(),n.data()),o;i.carousel(s),(o<span class="o">=</span>n.attr(<span class="s2">"data-slide-to"</span>))<span class="o">&amp;&amp;</span>i.data(<span class="s2">"carousel"</span>).pause().to(o).cycle(),t.preventDefault()})}(<span class="nb">window</span>.jQuery),<span class="o">!</span><span class="kd">function</span>(e){<span class="s2">"use strict"</span>;<span class="kd">var</span> t<span class="o">=</span><span class="kd">function</span>(t,n){<span class="k">this</span>.$element<span class="o">=</span>e(t),<span class="k">this</span>.options<span class="o">=</span>e.extend({},e.fn.collapse.defaults,n),<span class="k">this</span>.options.parent<span class="o">&amp;&amp;</span>(<span class="k">this</span>.$parent<span class="o">=</span>e(<span class="k">this</span>.options.parent)),<span class="k">this</span>.options.toggle<span class="o">&amp;&amp;</span><span class="k">this</span>.toggle()};t.prototype<span class="o">=</span>{constructor<span class="o">:</span>t,dimension<span class="o">:</span><span class="kd">function</span>(){<span class="kd">var</span> e<span class="o">=</span><span class="k">this</span>.$element.hasClass(<span class="s2">"width"</span>);<span class="k">return</span> e<span class="o">?</span><span class="s2">"width"</span><span class="o">:</span><span class="s2">"height"</span>},show<span class="o">:</span><span class="kd">function</span>(){<span class="kd">var</span> t,n,r,i;<span class="k">if</span>(<span class="k">this</span>.transitioning<span class="o">||</span><span class="k">this</span>.$element.hasClass(<span class="s2">"in"</span>))<span class="k">return</span>;t<span class="o">=</span><span class="k">this</span>.dimension(),n<span class="o">=</span>e.camelCase([<span class="s2">"scroll"</span>,t].join(<span class="s2">"-"</span>)),r<span class="o">=</span><span class="k">this</span>.$parent<span class="o">&amp;&amp;</span><span class="k">this</span>.$parent.find(<span class="s2">"&gt; .accordion-group &gt; .in"</span>);<span class="k">if</span>(r<span class="o">&amp;&amp;</span>r.length){i<span class="o">=</span>r.data(<span class="s2">"collapse"</span>);<span class="k">if</span>(i<span class="o">&amp;&amp;</span>i.transitioning)<span class="k">return</span>;r.collapse(<span class="s2">"hide"</span>),i<span class="o">||</span>r.data(<span class="s2">"collapse"</span>,<span class="kc">null</span>)}<span class="k">this</span>.$element[t](<span class="mi">0</span>),<span class="k">this</span>.transition(<span class="s2">"addClass"</span>,e.Event(<span class="s2">"show"</span>),<span class="s2">"shown"</span>),e.support.transition<span class="o">&amp;&amp;</span><span class="k">this</span>.$element[t](<span class="k">this</span>.$element[<span class="mi">0</span>][n])},hide<span class="o">:</span><span class="kd">function</span>(){<span class="kd">var</span> t;<span class="k">if</span>(<span class="k">this</span>.transitioning<span class="o">||</span><span class="o">!</span><span class="k">this</span>.$element.hasClass(<span class="s2">"in"</span>))<span class="k">return</span>;t<span class="o">=</span><span class="k">this</span>.dimension(),<span class="k">this</span>.reset(<span class="k">this</span>.$element[t]()),<span class="k">this</span>.transition(<span class="s2">"removeClass"</span>,e.Event(<span class="s2">"hide"</span>),<span class="s2">"hidden"</span>),<span class="k">this</span>.$element[t](<span class="mi">0</span>)},reset<span class="o">:</span><span class="kd">function</span>(e){<span class="kd">var</span> t<span class="o">=</span><span class="k">this</span>.dimension();<span class="k">return</span> <span class="k">this</span>.$element.removeClass(<span class="s2">"collapse"</span>)[t](e<span class="o">||</span><span class="s2">"auto"</span>)[<span class="mi">0</span>].offsetWidth,<span class="k">this</span>.$element[e<span class="o">!==</span><span class="kc">null</span><span class="o">?</span><span class="s2">"addClass"</span><span class="o">:</span><span class="s2">"removeClass"</span>](<span class="s2">"collapse"</span>),<span class="k">this</span>},transition<span class="o">:</span><span class="kd">function</span>(t,n,r){<span class="kd">var</span> i<span class="o">=</span><span class="k">this</span>,s<span class="o">=</span><span class="kd">function</span>(){n.type<span class="o">==</span><span class="s2">"show"</span><span class="o">&amp;&amp;</span>i.reset(),i.transitioning<span class="o">=</span><span class="mi">0</span>,i.$element.trigger(r)};<span class="k">this</span>.$element.trigger(n);<span class="k">if</span>(n.isDefaultPrevented())<span class="k">return</span>;<span class="k">this</span>.transitioning<span class="o">=</span><span class="mi">1</span>,<span class="k">this</span>.$element[t](<span class="s2">"in"</span>),e.support.transition<span class="o">&amp;&amp;</span><span class="k">this</span>.$element.hasClass(<span class="s2">"collapse"</span>)<span class="o">?</span><span class="k">this</span>.$element.one(e.support.transition.end,s)<span class="o">:</span>s()},toggle<span class="o">:</span><span class="kd">function</span>(){<span class="k">this</span>[<span class="k">this</span>.$element.hasClass(<span class="s2">"in"</span>)<span class="o">?</span><span class="s2">"hide"</span><span class="o">:</span><span class="s2">"show"</span>]()}};<span class="kd">var</span> n<span class="o">=</span>e.fn.collapse;e.fn.collapse<span class="o">=</span><span class="kd">function</span>(n){<span class="k">return</span> <span class="k">this</span>.each(<span class="kd">function</span>(){<span class="kd">var</span> r<span class="o">=</span>e(<span class="k">this</span>),i<span class="o">=</span>r.data(<span class="s2">"collapse"</span>),s<span class="o">=</span>e.extend({},e.fn.collapse.defaults,r.data(),<span class="k">typeof</span> n<span class="o">==</span><span class="s2">"object"</span><span class="o">&amp;&amp;</span>n);i<span class="o">||</span>r.data(<span class="s2">"collapse"</span>,i<span class="o">=</span><span class="k">new</span> t(<span class="k">this</span>,s)),<span class="k">typeof</span> n<span class="o">==</span><span class="s2">"string"</span><span class="o">&amp;&amp;</span>i[n]()})},e.fn.collapse.defaults<span class="o">=</span>{toggle<span class="o">:</span><span class="o">!</span><span class="mi">0</span>},e.fn.collapse.Constructor<span class="o">=</span>t,e.fn.collapse.noConflict<span class="o">=</span><span class="kd">function</span>(){<span class="k">return</span> e.fn.collapse<span class="o">=</span>n,<span class="k">this</span>},e(<span class="nb">document</span>).on(<span class="s2">"click.collapse.data-api"</span>,<span class="s2">"[data-toggle=collapse]"</span>,<span class="kd">function</span>(t){<span class="kd">var</span> n<span class="o">=</span>e(<span class="k">this</span>),r,i<span class="o">=</span>n.attr(<span class="s2">"data-target"</span>)<span class="o">||</span>t.preventDefault()<span class="o">||</span>(r<span class="o">=</span>n.attr(<span class="s2">"href"</span>))<span class="o">&amp;&amp;</span>r.replace(<span class="sr">/.*(?=#[^\s]+$)/</span>,<span class="s2">""</span>),s<span class="o">=</span>e(i).data(<span class="s2">"collapse"</span>)<span class="o">?</span><span class="s2">"toggle"</span><span class="o">:</span>n.data();n[e(i).hasClass(<span class="s2">"in"</span>)<span class="o">?</span><span class="s2">"addClass"</span><span class="o">:</span><span class="s2">"removeClass"</span>](<span class="s2">"collapsed"</span>),e(i).collapse(s)})}(<span class="nb">window</span>.jQuery),<span class="o">!</span><span class="kd">function</span>(e){<span class="s2">"use strict"</span>;<span class="kd">function</span> r(){e(t).each(<span class="kd">function</span>(){i(e(<span class="k">this</span>)).removeClass(<span class="s2">"open"</span>)})}<span class="kd">function</span> i(t){<span class="kd">var</span> n<span class="o">=</span>t.attr(<span class="s2">"data-target"</span>),r;n<span class="o">||</span>(n<span class="o">=</span>t.attr(<span class="s2">"href"</span>),n<span class="o">=</span>n<span class="o">&amp;&amp;</span><span class="sr">/#/</span>.test(n)<span class="o">&amp;&amp;</span>n.replace(<span class="sr">/.*(?=#[^\s]*$)/</span>,<span class="s2">""</span>)),r<span class="o">=</span>n<span class="o">&amp;&amp;</span>e(n);<span class="k">if</span>(<span class="o">!</span>r<span class="o">||</span><span class="o">!</span>r.length)r<span class="o">=</span>t.parent();<span class="k">return</span> r}<span class="kd">var</span> t<span class="o">=</span><span class="s2">"[data-toggle=dropdown]"</span>,n<span class="o">=</span><span class="kd">function</span>(t){<span class="kd">var</span> n<span class="o">=</span>e(t).on(<span class="s2">"click.dropdown.data-api"</span>,<span class="k">this</span>.toggle);e(<span class="s2">"html"</span>).on(<span class="s2">"click.dropdown.data-api"</span>,<span class="kd">function</span>(){n.parent().removeClass(<span class="s2">"open"</span>)})};n.prototype<span class="o">=</span>{constructor<span class="o">:</span>n,toggle<span class="o">:</span><span class="kd">function</span>(t){<span class="kd">var</span> n<span class="o">=</span>e(<span class="k">this</span>),s,o;<span class="k">if</span>(n.is(<span class="s2">".disabled, :disabled"</span>))<span class="k">return</span>;<span class="k">return</span> s<span class="o">=</span>i(n),o<span class="o">=</span>s.hasClass(<span class="s2">"open"</span>),r(),o<span class="o">||</span>s.toggleClass(<span class="s2">"open"</span>),n.focus(),<span class="o">!</span><span class="mi">1</span>},keydown<span class="o">:</span><span class="kd">function</span>(n){<span class="kd">var</span> r,s,o,u,a,f;<span class="k">if</span>(<span class="o">!</span><span class="sr">/(38|40|27)/</span>.test(n.keyCode))<span class="k">return</span>;r<span class="o">=</span>e(<span class="k">this</span>),n.preventDefault(),n.stopPropagation();<span class="k">if</span>(r.is(<span class="s2">".disabled, :disabled"</span>))<span class="k">return</span>;u<span class="o">=</span>i(r),a<span class="o">=</span>u.hasClass(<span class="s2">"open"</span>);<span class="k">if</span>(<span class="o">!</span>a<span class="o">||</span>a<span class="o">&amp;&amp;</span>n.keyCode<span class="o">==</span><span class="mi">27</span>)<span class="k">return</span> n.which<span class="o">==</span><span class="mi">27</span><span class="o">&amp;&amp;</span>u.find(t).focus(),r.click();s<span class="o">=</span>e(<span class="s2">"[role=menu] li:not(.divider):visible a"</span>,u);<span class="k">if</span>(<span class="o">!</span>s.length)<span class="k">return</span>;f<span class="o">=</span>s.index(s.filter(<span class="s2">":focus"</span>)),n.keyCode<span class="o">==</span><span class="mi">38</span><span class="o">&amp;&amp;</span>f<span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span>f<span class="o">--</span>,n.keyCode<span class="o">==</span><span class="mi">40</span><span class="o">&amp;&amp;</span>f<span class="o">&lt;</span>s.length<span class="o">-</span><span class="mi">1</span><span class="o">&amp;&amp;</span>f<span class="o">++</span>,<span class="o">~</span>f<span class="o">||</span>(f<span class="o">=</span><span class="mi">0</span>),s.eq(f).focus()}};<span class="kd">var</span> s<span class="o">=</span>e.fn.dropdown;e.fn.dropdown<span class="o">=</span><span class="kd">function</span>(t){<span class="k">return</span> <span class="k">this</span>.each(<span class="kd">function</span>(){<span class="kd">var</span> r<span class="o">=</span>e(<span class="k">this</span>),i<span class="o">=</span>r.data(<span class="s2">"dropdown"</span>);i<span class="o">||</span>r.data(<span class="s2">"dropdown"</span>,i<span class="o">=</span><span class="k">new</span> n(<span class="k">this</span>)),<span class="k">typeof</span> t<span class="o">==</span><span class="s2">"string"</span><span class="o">&amp;&amp;</span>i[t].call(r)})},e.fn.dropdown.Constructor<span class="o">=</span>n,e.fn.dropdown.noConflict<span class="o">=</span><span class="kd">function</span>(){<span class="k">return</span> e.fn.dropdown<span class="o">=</span>s,<span class="k">this</span>},e(<span class="nb">document</span>).on(<span class="s2">"click.dropdown.data-api"</span>,r).on(<span class="s2">"click.dropdown.data-api"</span>,<span class="s2">".dropdown form"</span>,<span class="kd">function</span>(e){e.stopPropagation()}).on(<span class="s2">"click.dropdown-menu"</span>,<span class="kd">function</span>(e){e.stopPropagation()}).on(<span class="s2">"click.dropdown.data-api"</span>,t,n.prototype.toggle).on(<span class="s2">"keydown.dropdown.data-api"</span>,t<span class="o">+</span><span class="s2">", [role=menu]"</span>,n.prototype.keydown)}(<span class="nb">window</span>.jQuery),<span class="o">!</span><span class="kd">function</span>(e){<span class="s2">"use strict"</span>;<span class="kd">var</span> t<span class="o">=</span><span class="kd">function</span>(t,n){<span class="k">this</span>.options<span class="o">=</span>n,<span class="k">this</span>.$element<span class="o">=</span>e(t).delegate(<span class="s1">'[data-dismiss="modal"]'</span>,<span class="s2">"click.dismiss.modal"</span>,e.proxy(<span class="k">this</span>.hide,<span class="k">this</span>)),<span class="k">this</span>.options.remote<span class="o">&amp;&amp;</span><span class="k">this</span>.$element.find(<span class="s2">".modal-body"</span>).load(<span class="k">this</span>.options.remote)};t.prototype<span class="o">=</span>{constructor<span class="o">:</span>t,toggle<span class="o">:</span><span class="kd">function</span>(){<span class="k">return</span> <span class="k">this</span>[<span class="k">this</span>.isShown<span class="o">?</span><span class="s2">"hide"</span><span class="o">:</span><span class="s2">"show"</span>]()},show<span class="o">:</span><span class="kd">function</span>(){<span class="kd">var</span> t<span class="o">=</span><span class="k">this</span>,n<span class="o">=</span>e.Event(<span class="s2">"show"</span>);<span class="k">this</span>.$element.trigger(n);<span class="k">if</span>(<span class="k">this</span>.isShown<span class="o">||</span>n.isDefaultPrevented())<span class="k">return</span>;<span class="k">this</span>.isShown<span class="o">=</span><span class="o">!</span><span class="mi">0</span>,<span class="k">this</span>.escape(),<span class="k">this</span>.backdrop(<span class="kd">function</span>(){<span class="kd">var</span> n<span class="o">=</span>e.support.transition<span class="o">&amp;&amp;</span>t.$element.hasClass(<span class="s2">"fade"</span>);t.$element.parent().length<span class="o">||</span>t.$element.appendTo(<span class="nb">document</span>.body),t.$element.show(),n<span class="o">&amp;&amp;</span>t.$element[<span class="mi">0</span>].offsetWidth,t.$element.addClass(<span class="s2">"in"</span>).attr(<span class="s2">"aria-hidden"</span>,<span class="o">!</span><span class="mi">1</span>),t.enforceFocus(),n<span class="o">?</span>t.$element.one(e.support.transition.end,<span class="kd">function</span>(){t.$element.focus().trigger(<span class="s2">"shown"</span>)})<span class="o">:</span>t.$element.focus().trigger(<span class="s2">"shown"</span>)})},hide<span class="o">:</span><span class="kd">function</span>(t){t<span class="o">&amp;&amp;</span>t.preventDefault();<span class="kd">var</span> n<span class="o">=</span><span class="k">this</span>;t<span class="o">=</span>e.Event(<span class="s2">"hide"</span>),<span class="k">this</span>.$element.trigger(t);<span class="k">if</span>(<span class="o">!</span><span class="k">this</span>.isShown<span class="o">||</span>t.isDefaultPrevented())<span class="k">return</span>;<span class="k">this</span>.isShown<span class="o">=</span><span class="o">!</span><span class="mi">1</span>,<span class="k">this</span>.escape(),e(<span class="nb">document</span>).off(<span class="s2">"focusin.modal"</span>),<span class="k">this</span>.$element.removeClass(<span class="s2">"in"</span>).attr(<span class="s2">"aria-hidden"</span>,<span class="o">!</span><span class="mi">0</span>),e.support.transition<span class="o">&amp;&amp;</span><span class="k">this</span>.$element.hasClass(<span class="s2">"fade"</span>)<span class="o">?</span><span class="k">this</span>.hideWithTransition()<span class="o">:</span><span class="k">this</span>.hideModal()},enforceFocus<span class="o">:</span><span class="kd">function</span>(){<span class="kd">var</span> t<span class="o">=</span><span class="k">this</span>;e(<span class="nb">document</span>).on(<span class="s2">"focusin.modal"</span>,<span class="kd">function</span>(e){t.$element[<span class="mi">0</span>]<span class="o">!==</span>e.target<span class="o">&amp;&amp;</span><span class="o">!</span>t.$element.has(e.target).length<span class="o">&amp;&amp;</span>t.$element.focus()})},escape<span class="o">:</span><span class="kd">function</span>(){<span class="kd">var</span> e<span class="o">=</span><span class="k">this</span>;<span class="k">this</span>.isShown<span class="o">&amp;&amp;</span><span class="k">this</span>.options.keyboard<span class="o">?</span><span class="k">this</span>.$element.on(<span class="s2">"keyup.dismiss.modal"</span>,<span class="kd">function</span>(t){t.which<span class="o">==</span><span class="mi">27</span><span class="o">&amp;&amp;</span>e.hide()})<span class="o">:</span><span class="k">this</span>.isShown<span class="o">||</span><span class="k">this</span>.$element.off(<span class="s2">"keyup.dismiss.modal"</span>)},hideWithTransition<span class="o">:</span><span class="kd">function</span>(){<span class="kd">var</span> t<span class="o">=</span><span class="k">this</span>,n<span class="o">=</span>setTimeout(<span class="kd">function</span>(){t.$element.off(e.support.transition.end),t.hideModal()},<span class="mi">500</span>);<span class="k">this</span>.$element.one(e.support.transition.end,<span class="kd">function</span>(){clearTimeout(n),t.hideModal()})},hideModal<span class="o">:</span><span class="kd">function</span>(){<span class="kd">var</span> e<span class="o">=</span><span class="k">this</span>;<span class="k">this</span>.$element.hide(),<span class="k">this</span>.backdrop(<span class="kd">function</span>(){e.removeBackdrop(),e.$element.trigger(<span class="s2">"hidden"</span>)})},removeBackdrop<span class="o">:</span><span class="kd">function</span>(){<span class="k">this</span>.$backdrop<span class="o">&amp;&amp;</span><span class="k">this</span>.$backdrop.remove(),<span class="k">this</span>.$backdrop<span class="o">=</span><span class="kc">null</span>},backdrop<span class="o">:</span><span class="kd">function</span>(t){<span class="kd">var</span> n<span class="o">=</span><span class="k">this</span>,r<span class="o">=</span><span class="k">this</span>.$element.hasClass(<span class="s2">"fade"</span>)<span class="o">?</span><span class="s2">"fade"</span><span class="o">:</span><span class="s2">""</span>;<span class="k">if</span>(<span class="k">this</span>.isShown<span class="o">&amp;&amp;</span><span class="k">this</span>.options.backdrop){<span class="kd">var</span> i<span class="o">=</span>e.support.transition<span class="o">&amp;&amp;</span>r;<span class="k">this</span>.$backdrop<span class="o">=</span>e(<span class="s1">'&lt;div class="modal-backdrop '</span><span class="o">+</span>r<span class="o">+</span><span class="s1">'" /&gt;'</span>).appendTo(<span class="nb">document</span>.body),<span class="k">this</span>.$backdrop.click(<span class="k">this</span>.options.backdrop<span class="o">==</span><span class="s2">"static"</span><span class="o">?</span>e.proxy(<span class="k">this</span>.$element[<span class="mi">0</span>].focus,<span class="k">this</span>.$element[<span class="mi">0</span>])<span class="o">:</span>e.proxy(<span class="k">this</span>.hide,<span class="k">this</span>)),i<span class="o">&amp;&amp;</span><span class="k">this</span>.$backdrop[<span class="mi">0</span>].offsetWidth,<span class="k">this</span>.$backdrop.addClass(<span class="s2">"in"</span>);<span class="k">if</span>(<span class="o">!</span>t)<span class="k">return</span>;i<span class="o">?</span><span class="k">this</span>.$backdrop.one(e.support.transition.end,t)<span class="o">:</span>t()}<span class="k">else</span><span class="o">!</span><span class="k">this</span>.isShown<span class="o">&amp;&amp;</span><span class="k">this</span>.$backdrop<span class="o">?</span>(<span class="k">this</span>.$backdrop.removeClass(<span class="s2">"in"</span>),e.support.transition<span class="o">&amp;&amp;</span><span class="k">this</span>.$element.hasClass(<span class="s2">"fade"</span>)<span class="o">?</span><span class="k">this</span>.$backdrop.one(e.support.transition.end,t)<span class="o">:</span>t())<span class="o">:</span>t<span class="o">&amp;&amp;</span>t()}};<span class="kd">var</span> n<span class="o">=</span>e.fn.modal;e.fn.modal<span class="o">=</span><span class="kd">function</span>(n){<span class="k">return</span> <span class="k">this</span>.each(<span class="kd">function</span>(){<span class="kd">var</span> r<span class="o">=</span>e(<span class="k">this</span>),i<span class="o">=</span>r.data(<span class="s2">"modal"</span>),s<span class="o">=</span>e.extend({},e.fn.modal.defaults,r.data(),<span class="k">typeof</span> n<span class="o">==</span><span class="s2">"object"</span><span class="o">&amp;&amp;</span>n);i<span class="o">||</span>r.data(<span class="s2">"modal"</span>,i<span class="o">=</span><span class="k">new</span> t(<span class="k">this</span>,s)),<span class="k">typeof</span> n<span class="o">==</span><span class="s2">"string"</span><span class="o">?</span>i[n]()<span class="o">:</span>s.show<span class="o">&amp;&amp;</span>i.show()})},e.fn.modal.defaults<span class="o">=</span>{backdrop<span class="o">:</span><span class="o">!</span><span class="mi">0</span>,keyboard<span class="o">:</span><span class="o">!</span><span class="mi">0</span>,show<span class="o">:</span><span class="o">!</span><span class="mi">0</span>},e.fn.modal.Constructor<span class="o">=</span>t,e.fn.modal.noConflict<span class="o">=</span><span class="kd">function</span>(){<span class="k">return</span> e.fn.modal<span class="o">=</span>n,<span class="k">this</span>},e(<span class="nb">document</span>).on(<span class="s2">"click.modal.data-api"</span>,<span class="s1">'[data-toggle="modal"]'</span>,<span class="kd">function</span>(t){<span class="kd">var</span> n<span class="o">=</span>e(<span class="k">this</span>),r<span class="o">=</span>n.attr(<span class="s2">"href"</span>),i<span class="o">=</span>e(n.attr(<span class="s2">"data-target"</span>)<span class="o">||</span>r<span class="o">&amp;&amp;</span>r.replace(<span class="sr">/.*(?=#[^\s]+$)/</span>,<span class="s2">""</span>)),s<span class="o">=</span>i.data(<span class="s2">"modal"</span>)<span class="o">?</span><span class="s2">"toggle"</span><span class="o">:</span>e.extend({remote<span class="o">:</span><span class="o">!</span><span class="sr">/#/</span>.test(r)<span class="o">&amp;&amp;</span>r},i.data(),n.data());t.preventDefault(),i.modal(s).one(<span class="s2">"hide"</span>,<span class="kd">function</span>(){n.focus()})})}(<span class="nb">window</span>.jQuery),<span class="o">!</span><span class="kd">function</span>(e){<span class="s2">"use strict"</span>;<span class="kd">var</span> t<span class="o">=</span><span class="kd">function</span>(e,t){<span class="k">this</span>.init(<span class="s2">"tooltip"</span>,e,t)};t.prototype<span class="o">=</span>{constructor<span class="o">:</span>t,init<span class="o">:</span><span class="kd">function</span>(t,n,r){<span class="kd">var</span> i,s,o,u,a;<span class="k">this</span>.type<span class="o">=</span>t,<span class="k">this</span>.$element<span class="o">=</span>e(n),<span class="k">this</span>.options<span class="o">=</span><span class="k">this</span>.getOptions(r),<span class="k">this</span>.enabled<span class="o">=</span><span class="o">!</span><span class="mi">0</span>,o<span class="o">=</span><span class="k">this</span>.options.trigger.split(<span class="s2">" "</span>);<span class="k">for</span>(a<span class="o">=</span>o.length;a<span class="o">--</span>;)u<span class="o">=</span>o[a],u<span class="o">==</span><span class="s2">"click"</span><span class="o">?</span><span class="k">this</span>.$element.on(<span class="s2">"click."</span><span class="o">+</span><span class="k">this</span>.type,<span class="k">this</span>.options.selector,e.proxy(<span class="k">this</span>.toggle,<span class="k">this</span>))<span class="o">:</span>u<span class="o">!=</span><span class="s2">"manual"</span><span class="o">&amp;&amp;</span>(i<span class="o">=</span>u<span class="o">==</span><span class="s2">"hover"</span><span class="o">?</span><span class="s2">"mouseenter"</span><span class="o">:</span><span class="s2">"focus"</span>,s<span class="o">=</span>u<span class="o">==</span><span class="s2">"hover"</span><span class="o">?</span><span class="s2">"mouseleave"</span><span class="o">:</span><span class="s2">"blur"</span>,<span class="k">this</span>.$element.on(i<span class="o">+</span><span class="s2">"."</span><span class="o">+</span><span class="k">this</span>.type,<span class="k">this</span>.options.selector,e.proxy(<span class="k">this</span>.enter,<span class="k">this</span>)),<span class="k">this</span>.$element.on(s<span class="o">+</span><span class="s2">"."</span><span class="o">+</span><span class="k">this</span>.type,<span class="k">this</span>.options.selector,e.proxy(<span class="k">this</span>.leave,<span class="k">this</span>)));<span class="k">this</span>.options.selector<span class="o">?</span><span class="k">this</span>._options<span class="o">=</span>e.extend({},<span class="k">this</span>.options,{trigger<span class="o">:</span><span class="s2">"manual"</span>,selector<span class="o">:</span><span class="s2">""</span>})<span class="o">:</span><span class="k">this</span>.fixTitle()},getOptions<span class="o">:</span><span class="kd">function</span>(t){<span class="k">return</span> t<span class="o">=</span>e.extend({},e.fn[<span class="k">this</span>.type].defaults,<span class="k">this</span>.$element.data(),t),t.delay<span class="o">&amp;&amp;</span><span class="k">typeof</span> t.delay<span class="o">==</span><span class="s2">"number"</span><span class="o">&amp;&amp;</span>(t.delay<span class="o">=</span>{show<span class="o">:</span>t.delay,hide<span class="o">:</span>t.delay}),t},enter<span class="o">:</span><span class="kd">function</span>(t){<span class="kd">var</span> n<span class="o">=</span>e.fn[<span class="k">this</span>.type].defaults,r<span class="o">=</span>{},i;<span class="k">this</span>._options<span class="o">&amp;&amp;</span>e.each(<span class="k">this</span>._options,<span class="kd">function</span>(e,t){n[e]<span class="o">!=</span>t<span class="o">&amp;&amp;</span>(r[e]<span class="o">=</span>t)},<span class="k">this</span>),i<span class="o">=</span>e(t.currentTarget)[<span class="k">this</span>.type](r).data(<span class="k">this</span>.type);<span class="k">if</span>(<span class="o">!</span>i.options.delay<span class="o">||</span><span class="o">!</span>i.options.delay.show)<span class="k">return</span> i.show();clearTimeout(<span class="k">this</span>.timeout),i.hoverState<span class="o">=</span><span class="s2">"in"</span>,<span class="k">this</span>.timeout<span class="o">=</span>setTimeout(<span class="kd">function</span>(){i.hoverState<span class="o">==</span><span class="s2">"in"</span><span class="o">&amp;&amp;</span>i.show()},i.options.delay.show)},leave<span class="o">:</span><span class="kd">function</span>(t){<span class="kd">var</span> n<span class="o">=</span>e(t.currentTarget)[<span class="k">this</span>.type](<span class="k">this</span>._options).data(<span class="k">this</span>.type);<span class="k">this</span>.timeout<span class="o">&amp;&amp;</span>clearTimeout(<span class="k">this</span>.timeout);<span class="k">if</span>(<span class="o">!</span>n.options.delay<span class="o">||</span><span class="o">!</span>n.options.delay.hide)<span class="k">return</span> n.hide();n.hoverState<span class="o">=</span><span class="s2">"out"</span>,<span class="k">this</span>.timeout<span class="o">=</span>setTimeout(<span class="kd">function</span>(){n.hoverState<span class="o">==</span><span class="s2">"out"</span><span class="o">&amp;&amp;</span>n.hide()},n.options.delay.hide)},show<span class="o">:</span><span class="kd">function</span>(){<span class="kd">var</span> t,n,r,i,s,o,u<span class="o">=</span>e.Event(<span class="s2">"show"</span>);<span class="k">if</span>(<span class="k">this</span>.hasContent()<span class="o">&amp;&amp;</span><span class="k">this</span>.enabled){<span class="k">this</span>.$element.trigger(u);<span class="k">if</span>(u.isDefaultPrevented())<span class="k">return</span>;t<span class="o">=</span><span class="k">this</span>.tip(),<span class="k">this</span>.setContent(),<span class="k">this</span>.options.animation<span class="o">&amp;&amp;</span>t.addClass(<span class="s2">"fade"</span>),s<span class="o">=</span><span class="k">typeof</span> <span class="k">this</span>.options.placement<span class="o">==</span><span class="s2">"function"</span><span class="o">?</span><span class="k">this</span>.options.placement.call(<span class="k">this</span>,t[<span class="mi">0</span>],<span class="k">this</span>.$element[<span class="mi">0</span>])<span class="o">:</span><span class="k">this</span>.options.placement,t.detach().css({top<span class="o">:</span><span class="mi">0</span>,left<span class="o">:</span><span class="mi">0</span>,display<span class="o">:</span><span class="s2">"block"</span>}),<span class="k">this</span>.options.container<span class="o">?</span>t.appendTo(<span class="k">this</span>.options.container)<span class="o">:</span>t.insertAfter(<span class="k">this</span>.$element),n<span class="o">=</span><span class="k">this</span>.getPosition(),r<span class="o">=</span>t[<span class="mi">0</span>].offsetWidth,i<span class="o">=</span>t[<span class="mi">0</span>].offsetHeight;<span class="k">switch</span>(s){<span class="k">case</span><span class="s2">"bottom"</span><span class="o">:</span>o<span class="o">=</span>{top<span class="o">:</span>n.top<span class="o">+</span>n.height,left<span class="o">:</span>n.left<span class="o">+</span>n.width<span class="o">/</span><span class="mi">2</span><span class="o">-</span>r<span class="o">/</span><span class="mi">2</span>};<span class="k">break</span>;<span class="k">case</span><span class="s2">"top"</span><span class="o">:</span>o<span class="o">=</span>{top<span class="o">:</span>n.top<span class="o">-</span>i,left<span class="o">:</span>n.left<span class="o">+</span>n.width<span class="o">/</span><span class="mi">2</span><span class="o">-</span>r<span class="o">/</span><span class="mi">2</span>};<span class="k">break</span>;<span class="k">case</span><span class="s2">"left"</span><span class="o">:</span>o<span class="o">=</span>{top<span class="o">:</span>n.top<span class="o">+</span>n.height<span class="o">/</span><span class="mi">2</span><span class="o">-</span>i<span class="o">/</span><span class="mi">2</span>,left<span class="o">:</span>n.left<span class="o">-</span>r};<span class="k">break</span>;<span class="k">case</span><span class="s2">"right"</span><span class="o">:</span>o<span class="o">=</span>{top<span class="o">:</span>n.top<span class="o">+</span>n.height<span class="o">/</span><span class="mi">2</span><span class="o">-</span>i<span class="o">/</span><span class="mi">2</span>,left<span class="o">:</span>n.left<span class="o">+</span>n.width}}<span class="k">this</span>.applyPlacement(o,s),<span class="k">this</span>.$element.trigger(<span class="s2">"shown"</span>)}},applyPlacement<span class="o">:</span><span class="kd">function</span>(e,t){<span class="kd">var</span> n<span class="o">=</span><span class="k">this</span>.tip(),r<span class="o">=</span>n[<span class="mi">0</span>].offsetWidth,i<span class="o">=</span>n[<span class="mi">0</span>].offsetHeight,s,o,u,a;n.offset(e).addClass(t).addClass(<span class="s2">"in"</span>),s<span class="o">=</span>n[<span class="mi">0</span>].offsetWidth,o<span class="o">=</span>n[<span class="mi">0</span>].offsetHeight,t<span class="o">==</span><span class="s2">"top"</span><span class="o">&amp;&amp;</span>o<span class="o">!=</span>i<span class="o">&amp;&amp;</span>(e.top<span class="o">=</span>e.top<span class="o">+</span>i<span class="o">-</span>o,a<span class="o">=</span><span class="o">!</span><span class="mi">0</span>),t<span class="o">==</span><span class="s2">"bottom"</span><span class="o">||</span>t<span class="o">==</span><span class="s2">"top"</span><span class="o">?</span>(u<span class="o">=</span><span class="mi">0</span>,e.left<span class="o">&lt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span>(u<span class="o">=</span>e.left<span class="o">*</span><span class="o">-</span><span class="mi">2</span>,e.left<span class="o">=</span><span class="mi">0</span>,n.offset(e),s<span class="o">=</span>n[<span class="mi">0</span>].offsetWidth,o<span class="o">=</span>n[<span class="mi">0</span>].offsetHeight),<span class="k">this</span>.replaceArrow(u<span class="o">-</span>r<span class="o">+</span>s,s,<span class="s2">"left"</span>))<span class="o">:</span><span class="k">this</span>.replaceArrow(o<span class="o">-</span>i,o,<span class="s2">"top"</span>),a<span class="o">&amp;&amp;</span>n.offset(e)},replaceArrow<span class="o">:</span><span class="kd">function</span>(e,t,n){<span class="k">this</span>.arrow().css(n,e<span class="o">?</span><span class="mi">50</span><span class="o">*</span>(<span class="mi">1</span><span class="o">-</span>e<span class="o">/</span>t)<span class="o">+</span><span class="s2">"%"</span><span class="o">:</span><span class="s2">""</span>)},setContent<span class="o">:</span><span class="kd">function</span>(){<span class="kd">var</span> e<span class="o">=</span><span class="k">this</span>.tip(),t<span class="o">=</span><span class="k">this</span>.getTitle();e.find(<span class="s2">".tooltip-inner"</span>)[<span class="k">this</span>.options.html<span class="o">?</span><span class="s2">"html"</span><span class="o">:</span><span class="s2">"text"</span>](t),e.removeClass(<span class="s2">"fade in top bottom left right"</span>)},hide<span class="o">:</span><span class="kd">function</span>(){<span class="kd">function</span> i(){<span class="kd">var</span> t<span class="o">=</span>setTimeout(<span class="kd">function</span>(){n.off(e.support.transition.end).detach()},<span class="mi">500</span>);n.one(e.support.transition.end,<span class="kd">function</span>(){clearTimeout(t),n.detach()})}<span class="kd">var</span> t<span class="o">=</span><span class="k">this</span>,n<span class="o">=</span><span class="k">this</span>.tip(),r<span class="o">=</span>e.Event(<span class="s2">"hide"</span>);<span class="k">this</span>.$element.trigger(r);<span class="k">if</span>(r.isDefaultPrevented())<span class="k">return</span>;<span class="k">return</span> n.removeClass(<span class="s2">"in"</span>),e.support.transition<span class="o">&amp;&amp;</span><span class="k">this</span>.$tip.hasClass(<span class="s2">"fade"</span>)<span class="o">?</span>i()<span class="o">:</span>n.detach(),<span class="k">this</span>.$element.trigger(<span class="s2">"hidden"</span>),<span class="k">this</span>},fixTitle<span class="o">:</span><span class="kd">function</span>(){<span class="kd">var</span> e<span class="o">=</span><span class="k">this</span>.$element;(e.attr(<span class="s2">"title"</span>)<span class="o">||</span><span class="k">typeof</span> e.attr(<span class="s2">"data-original-title"</span>)<span class="o">!=</span><span class="s2">"string"</span>)<span class="o">&amp;&amp;</span>e.attr(<span class="s2">"data-original-title"</span>,e.attr(<span class="s2">"title"</span>)<span class="o">||</span><span class="s2">""</span>).attr(<span class="s2">"title"</span>,<span class="s2">""</span>)},hasContent<span class="o">:</span><span class="kd">function</span>(){<span class="k">return</span> <span class="k">this</span>.getTitle()},getPosition<span class="o">:</span><span class="kd">function</span>(){<span class="kd">var</span> t<span class="o">=</span><span class="k">this</span>.$element[<span class="mi">0</span>];<span class="k">return</span> e.extend({},<span class="k">typeof</span> t.getBoundingClientRect<span class="o">==</span><span class="s2">"function"</span><span class="o">?</span>t.getBoundingClientRect()<span class="o">:</span>{width<span class="o">:</span>t.offsetWidth,height<span class="o">:</span>t.offsetHeight},<span class="k">this</span>.$element.offset())},getTitle<span class="o">:</span><span class="kd">function</span>(){<span class="kd">var</span> e,t<span class="o">=</span><span class="k">this</span>.$element,n<span class="o">=</span><span class="k">this</span>.options;<span class="k">return</span> e<span class="o">=</span>t.attr(<span class="s2">"data-original-title"</span>)<span class="o">||</span>(<span class="k">typeof</span> n.title<span class="o">==</span><span class="s2">"function"</span><span class="o">?</span>n.title.call(t[<span class="mi">0</span>])<span class="o">:</span>n.title),e},tip<span class="o">:</span><span class="kd">function</span>(){<span class="k">return</span> <span class="k">this</span>.$tip<span class="o">=</span><span class="k">this</span>.$tip<span class="o">||</span>e(<span class="k">this</span>.options.template)},arrow<span class="o">:</span><span class="kd">function</span>(){<span class="k">return</span> <span class="k">this</span>.$arrow<span class="o">=</span><span class="k">this</span>.$arrow<span class="o">||</span><span class="k">this</span>.tip().find(<span class="s2">".tooltip-arrow"</span>)},validate<span class="o">:</span><span class="kd">function</span>(){<span class="k">this</span>.$element[<span class="mi">0</span>].parentNode<span class="o">||</span>(<span class="k">this</span>.hide(),<span class="k">this</span>.$element<span class="o">=</span><span class="kc">null</span>,<span class="k">this</span>.options<span class="o">=</span><span class="kc">null</span>)},enable<span class="o">:</span><span class="kd">function</span>(){<span class="k">this</span>.enabled<span class="o">=</span><span class="o">!</span><span class="mi">0</span>},disable<span class="o">:</span><span class="kd">function</span>(){<span class="k">this</span>.enabled<span class="o">=</span><span class="o">!</span><span class="mi">1</span>},toggleEnabled<span class="o">:</span><span class="kd">function</span>(){<span class="k">this</span>.enabled<span class="o">=</span><span class="o">!</span><span class="k">this</span>.enabled},toggle<span class="o">:</span><span class="kd">function</span>(t){<span class="kd">var</span> n<span class="o">=</span>t<span class="o">?</span>e(t.currentTarget)[<span class="k">this</span>.type](<span class="k">this</span>._options).data(<span class="k">this</span>.type)<span class="o">:</span><span class="k">this</span>;n.tip().hasClass(<span class="s2">"in"</span>)<span class="o">?</span>n.hide()<span class="o">:</span>n.show()},destroy<span class="o">:</span><span class="kd">function</span>(){<span class="k">this</span>.hide().$element.off(<span class="s2">"."</span><span class="o">+</span><span class="k">this</span>.type).removeData(<span class="k">this</span>.type)}};<span class="kd">var</span> n<span class="o">=</span>e.fn.tooltip;e.fn.tooltip<span class="o">=</span><span class="kd">function</span>(n){<span class="k">return</span> <span class="k">this</span>.each(<span class="kd">function</span>(){<span class="kd">var</span> r<span class="o">=</span>e(<span class="k">this</span>),i<span class="o">=</span>r.data(<span class="s2">"tooltip"</span>),s<span class="o">=</span><span class="k">typeof</span> n<span class="o">==</span><span class="s2">"object"</span><span class="o">&amp;&amp;</span>n;i<span class="o">||</span>r.data(<span class="s2">"tooltip"</span>,i<span class="o">=</span><span class="k">new</span> t(<span class="k">this</span>,s)),<span class="k">typeof</span> n<span class="o">==</span><span class="s2">"string"</span><span class="o">&amp;&amp;</span>i[n]()})},e.fn.tooltip.Constructor<span class="o">=</span>t,e.fn.tooltip.defaults<span class="o">=</span>{animation<span class="o">:</span><span class="o">!</span><span class="mi">0</span>,placement<span class="o">:</span><span class="s2">"top"</span>,selector<span class="o">:</span><span class="o">!</span><span class="mi">1</span>,template<span class="o">:</span><span class="s1">'&lt;div class="tooltip"&gt;&lt;div class="tooltip-arrow"&gt;&lt;/div&gt;&lt;div class="tooltip-inner"&gt;&lt;/div&gt;&lt;/div&gt;'</span>,trigger<span class="o">:</span><span class="s2">"hover focus"</span>,title<span class="o">:</span><span class="s2">""</span>,delay<span class="o">:</span><span class="mi">0</span>,html<span class="o">:</span><span class="o">!</span><span class="mi">1</span>,container<span class="o">:</span><span class="o">!</span><span class="mi">1</span>},e.fn.tooltip.noConflict<span class="o">=</span><span class="kd">function</span>(){<span class="k">return</span> e.fn.tooltip<span class="o">=</span>n,<span class="k">this</span>}}(<span class="nb">window</span>.jQuery),<span class="o">!</span><span class="kd">function</span>(e){<span class="s2">"use strict"</span>;<span class="kd">var</span> t<span class="o">=</span><span class="kd">function</span>(e,t){<span class="k">this</span>.init(<span class="s2">"popover"</span>,e,t)};t.prototype<span class="o">=</span>e.extend({},e.fn.tooltip.Constructor.prototype,{constructor<span class="o">:</span>t,setContent<span class="o">:</span><span class="kd">function</span>(){<span class="kd">var</span> e<span class="o">=</span><span class="k">this</span>.tip(),t<span class="o">=</span><span class="k">this</span>.getTitle(),n<span class="o">=</span><span class="k">this</span>.getContent();e.find(<span class="s2">".popover-title"</span>)[<span class="k">this</span>.options.html<span class="o">?</span><span class="s2">"html"</span><span class="o">:</span><span class="s2">"text"</span>](t),e.find(<span class="s2">".popover-content"</span>)[<span class="k">this</span>.options.html<span class="o">?</span><span class="s2">"html"</span><span class="o">:</span><span class="s2">"text"</span>](n),e.removeClass(<span class="s2">"fade top bottom left right in"</span>)},hasContent<span class="o">:</span><span class="kd">function</span>(){<span class="k">return</span> <span class="k">this</span>.getTitle()<span class="o">||</span><span class="k">this</span>.getContent()},getContent<span class="o">:</span><span class="kd">function</span>(){<span class="kd">var</span> e,t<span class="o">=</span><span class="k">this</span>.$element,n<span class="o">=</span><span class="k">this</span>.options;<span class="k">return</span> e<span class="o">=</span>(<span class="k">typeof</span> n.content<span class="o">==</span><span class="s2">"function"</span><span class="o">?</span>n.content.call(t[<span class="mi">0</span>])<span class="o">:</span>n.content)<span class="o">||</span>t.attr(<span class="s2">"data-content"</span>),e},tip<span class="o">:</span><span class="kd">function</span>(){<span class="k">return</span> <span class="k">this</span>.$tip<span class="o">||</span>(<span class="k">this</span>.$tip<span class="o">=</span>e(<span class="k">this</span>.options.template)),<span class="k">this</span>.$tip},destroy<span class="o">:</span><span class="kd">function</span>(){<span class="k">this</span>.hide().$element.off(<span class="s2">"."</span><span class="o">+</span><span class="k">this</span>.type).removeData(<span class="k">this</span>.type)}});<span class="kd">var</span> n<span class="o">=</span>e.fn.popover;e.fn.popover<span class="o">=</span><span class="kd">function</span>(n){<span class="k">return</span> <span class="k">this</span>.each(<span class="kd">function</span>(){<span class="kd">var</span> r<span class="o">=</span>e(<span class="k">this</span>),i<span class="o">=</span>r.data(<span class="s2">"popover"</span>),s<span class="o">=</span><span class="k">typeof</span> n<span class="o">==</span><span class="s2">"object"</span><span class="o">&amp;&amp;</span>n;i<span class="o">||</span>r.data(<span class="s2">"popover"</span>,i<span class="o">=</span><span class="k">new</span> t(<span class="k">this</span>,s)),<span class="k">typeof</span> n<span class="o">==</span><span class="s2">"string"</span><span class="o">&amp;&amp;</span>i[n]()})},e.fn.popover.Constructor<span class="o">=</span>t,e.fn.popover.defaults<span class="o">=</span>e.extend({},e.fn.tooltip.defaults,{placement<span class="o">:</span><span class="s2">"right"</span>,trigger<span class="o">:</span><span class="s2">"click"</span>,content<span class="o">:</span><span class="s2">""</span>,template<span class="o">:</span><span class="s1">'&lt;div class="popover"&gt;&lt;div class="arrow"&gt;&lt;/div&gt;&lt;h3 class="popover-title"&gt;&lt;/h3&gt;&lt;div class="popover-content"&gt;&lt;/div&gt;&lt;/div&gt;'</span>}),e.fn.popover.noConflict<span class="o">=</span><span class="kd">function</span>(){<span class="k">return</span> e.fn.popover<span class="o">=</span>n,<span class="k">this</span>}}(<span class="nb">window</span>.jQuery),<span class="o">!</span><span class="kd">function</span>(e){<span class="s2">"use strict"</span>;<span class="kd">function</span> t(t,n){<span class="kd">var</span> r<span class="o">=</span>e.proxy(<span class="k">this</span>.process,<span class="k">this</span>),i<span class="o">=</span>e(t).is(<span class="s2">"body"</span>)<span class="o">?</span>e(<span class="nb">window</span>)<span class="o">:</span>e(t),s;<span class="k">this</span>.options<span class="o">=</span>e.extend({},e.fn.scrollspy.defaults,n),<span class="k">this</span>.$scrollElement<span class="o">=</span>i.on(<span class="s2">"scroll.scroll-spy.data-api"</span>,r),<span class="k">this</span>.selector<span class="o">=</span>(<span class="k">this</span>.options.target<span class="o">||</span>(s<span class="o">=</span>e(t).attr(<span class="s2">"href"</span>))<span class="o">&amp;&amp;</span>s.replace(<span class="sr">/.*(?=#[^\s]+$)/</span>,<span class="s2">""</span>)<span class="o">||</span><span class="s2">""</span>)<span class="o">+</span><span class="s2">" .nav li &gt; a"</span>,<span class="k">this</span>.$body<span class="o">=</span>e(<span class="s2">"body"</span>),<span class="k">this</span>.refresh(),<span class="k">this</span>.process()}t.prototype<span class="o">=</span>{constructor<span class="o">:</span>t,refresh<span class="o">:</span><span class="kd">function</span>(){<span class="kd">var</span> t<span class="o">=</span><span class="k">this</span>,n;<span class="k">this</span>.offsets<span class="o">=</span>e([]),<span class="k">this</span>.targets<span class="o">=</span>e([]),n<span class="o">=</span><span class="k">this</span>.$body.find(<span class="k">this</span>.selector).map(<span class="kd">function</span>(){<span class="kd">var</span> n<span class="o">=</span>e(<span class="k">this</span>),r<span class="o">=</span>n.data(<span class="s2">"target"</span>)<span class="o">||</span>n.attr(<span class="s2">"href"</span>),i<span class="o">=</span><span class="sr">/^#\w/</span>.test(r)<span class="o">&amp;&amp;</span>e(r);<span class="k">return</span> i<span class="o">&amp;&amp;</span>i.length<span class="o">&amp;&amp;</span>[[i.position().top<span class="o">+</span>(<span class="o">!</span>e.isWindow(t.$scrollElement.get(<span class="mi">0</span>))<span class="o">&amp;&amp;</span>t.$scrollElement.scrollTop()),r]]<span class="o">||</span><span class="kc">null</span>}).sort(<span class="kd">function</span>(e,t){<span class="k">return</span> e[<span class="mi">0</span>]<span class="o">-</span>t[<span class="mi">0</span>]}).each(<span class="kd">function</span>(){t.offsets.push(<span class="k">this</span>[<span class="mi">0</span>]),t.targets.push(<span class="k">this</span>[<span class="mi">1</span>])})},process<span class="o">:</span><span class="kd">function</span>(){<span class="kd">var</span> e<span class="o">=</span><span class="k">this</span>.$scrollElement.scrollTop()<span class="o">+</span><span class="k">this</span>.options.offset,t<span class="o">=</span><span class="k">this</span>.$scrollElement[<span class="mi">0</span>].scrollHeight<span class="o">||</span><span class="k">this</span>.$body[<span class="mi">0</span>].scrollHeight,n<span class="o">=</span>t<span class="o">-</span><span class="k">this</span>.$scrollElement.height(),r<span class="o">=</span><span class="k">this</span>.offsets,i<span class="o">=</span><span class="k">this</span>.targets,s<span class="o">=</span><span class="k">this</span>.activeTarget,o;<span class="k">if</span>(e<span class="o">&gt;=</span>n)<span class="k">return</span> s<span class="o">!=</span>(o<span class="o">=</span>i.last()[<span class="mi">0</span>])<span class="o">&amp;&amp;</span><span class="k">this</span>.activate(o);<span class="k">for</span>(o<span class="o">=</span>r.length;o<span class="o">--</span>;)s<span class="o">!=</span>i[o]<span class="o">&amp;&amp;</span>e<span class="o">&gt;=</span>r[o]<span class="o">&amp;&amp;</span>(<span class="o">!</span>r[o<span class="o">+</span><span class="mi">1</span>]<span class="o">||</span>e<span class="o">&lt;=</span>r[o<span class="o">+</span><span class="mi">1</span>])<span class="o">&amp;&amp;</span><span class="k">this</span>.activate(i[o])},activate<span class="o">:</span><span class="kd">function</span>(t){<span class="kd">var</span> n,r;<span class="k">this</span>.activeTarget<span class="o">=</span>t,e(<span class="k">this</span>.selector).parent(<span class="s2">".active"</span>).removeClass(<span class="s2">"active"</span>),r<span class="o">=</span><span class="k">this</span>.selector<span class="o">+</span><span class="s1">'[data-target="'</span><span class="o">+</span>t<span class="o">+</span><span class="s1">'"],'</span><span class="o">+</span><span class="k">this</span>.selector<span class="o">+</span><span class="s1">'[href="'</span><span class="o">+</span>t<span class="o">+</span><span class="s1">'"]'</span>,n<span class="o">=</span>e(r).parent(<span class="s2">"li"</span>).addClass(<span class="s2">"active"</span>),n.parent(<span class="s2">".dropdown-menu"</span>).length<span class="o">&amp;&amp;</span>(n<span class="o">=</span>n.closest(<span class="s2">"li.dropdown"</span>).addClass(<span class="s2">"active"</span>)),n.trigger(<span class="s2">"activate"</span>)}};<span class="kd">var</span> n<span class="o">=</span>e.fn.scrollspy;e.fn.scrollspy<span class="o">=</span><span class="kd">function</span>(n){<span class="k">return</span> <span class="k">this</span>.each(<span class="kd">function</span>(){<span class="kd">var</span> r<span class="o">=</span>e(<span class="k">this</span>),i<span class="o">=</span>r.data(<span class="s2">"scrollspy"</span>),s<span class="o">=</span><span class="k">typeof</span> n<span class="o">==</span><span class="s2">"object"</span><span class="o">&amp;&amp;</span>n;i<span class="o">||</span>r.data(<span class="s2">"scrollspy"</span>,i<span class="o">=</span><span class="k">new</span> t(<span class="k">this</span>,s)),<span class="k">typeof</span> n<span class="o">==</span><span class="s2">"string"</span><span class="o">&amp;&amp;</span>i[n]()})},e.fn.scrollspy.Constructor<span class="o">=</span>t,e.fn.scrollspy.defaults<span class="o">=</span>{offset<span class="o">:</span><span class="mi">10</span>},e.fn.scrollspy.noConflict<span class="o">=</span><span class="kd">function</span>(){<span class="k">return</span> e.fn.scrollspy<span class="o">=</span>n,<span class="k">this</span>},e(<span class="nb">window</span>).on(<span class="s2">"load"</span>,<span class="kd">function</span>(){e(<span class="s1">'[data-spy="scroll"]'</span>).each(<span class="kd">function</span>(){<span class="kd">var</span> t<span class="o">=</span>e(<span class="k">this</span>);t.scrollspy(t.data())})})}(<span class="nb">window</span>.jQuery),<span class="o">!</span><span class="kd">function</span>(e){<span class="s2">"use strict"</span>;<span class="kd">var</span> t<span class="o">=</span><span class="kd">function</span>(t){<span class="k">this</span>.element<span class="o">=</span>e(t)};t.prototype<span class="o">=</span>{constructor<span class="o">:</span>t,show<span class="o">:</span><span class="kd">function</span>(){<span class="kd">var</span> t<span class="o">=</span><span class="k">this</span>.element,n<span class="o">=</span>t.closest(<span class="s2">"ul:not(.dropdown-menu)"</span>),r<span class="o">=</span>t.attr(<span class="s2">"data-target"</span>),i,s,o;r<span class="o">||</span>(r<span class="o">=</span>t.attr(<span class="s2">"href"</span>),r<span class="o">=</span>r<span class="o">&amp;&amp;</span>r.replace(<span class="sr">/.*(?=#[^\s]*$)/</span>,<span class="s2">""</span>));<span class="k">if</span>(t.parent(<span class="s2">"li"</span>).hasClass(<span class="s2">"active"</span>))<span class="k">return</span>;i<span class="o">=</span>n.find(<span class="s2">".active:last a"</span>)[<span class="mi">0</span>],o<span class="o">=</span>e.Event(<span class="s2">"show"</span>,{relatedTarget<span class="o">:</span>i}),t.trigger(o);<span class="k">if</span>(o.isDefaultPrevented())<span class="k">return</span>;s<span class="o">=</span>e(r),<span class="k">this</span>.activate(t.parent(<span class="s2">"li"</span>),n),<span class="k">this</span>.activate(s,s.parent(),<span class="kd">function</span>(){t.trigger({type<span class="o">:</span><span class="s2">"shown"</span>,relatedTarget<span class="o">:</span>i})})},activate<span class="o">:</span><span class="kd">function</span>(t,n,r){<span class="kd">function</span> o(){i.removeClass(<span class="s2">"active"</span>).find(<span class="s2">"&gt; .dropdown-menu &gt; .active"</span>).removeClass(<span class="s2">"active"</span>),t.addClass(<span class="s2">"active"</span>),s<span class="o">?</span>(t[<span class="mi">0</span>].offsetWidth,t.addClass(<span class="s2">"in"</span>))<span class="o">:</span>t.removeClass(<span class="s2">"fade"</span>),t.parent(<span class="s2">".dropdown-menu"</span>)<span class="o">&amp;&amp;</span>t.closest(<span class="s2">"li.dropdown"</span>).addClass(<span class="s2">"active"</span>),r<span class="o">&amp;&amp;</span>r()}<span class="kd">var</span> i<span class="o">=</span>n.find(<span class="s2">"&gt; .active"</span>),s<span class="o">=</span>r<span class="o">&amp;&amp;</span>e.support.transition<span class="o">&amp;&amp;</span>i.hasClass(<span class="s2">"fade"</span>);s<span class="o">?</span>i.one(e.support.transition.end,o)<span class="o">:</span>o(),i.removeClass(<span class="s2">"in"</span>)}};<span class="kd">var</span> n<span class="o">=</span>e.fn.tab;e.fn.tab<span class="o">=</span><span class="kd">function</span>(n){<span class="k">return</span> <span class="k">this</span>.each(<span class="kd">function</span>(){<span class="kd">var</span> r<span class="o">=</span>e(<span class="k">this</span>),i<span class="o">=</span>r.data(<span class="s2">"tab"</span>);i<span class="o">||</span>r.data(<span class="s2">"tab"</span>,i<span class="o">=</span><span class="k">new</span> t(<span class="k">this</span>)),<span class="k">typeof</span> n<span class="o">==</span><span class="s2">"string"</span><span class="o">&amp;&amp;</span>i[n]()})},e.fn.tab.Constructor<span class="o">=</span>t,e.fn.tab.noConflict<span class="o">=</span><span class="kd">function</span>(){<span class="k">return</span> e.fn.tab<span class="o">=</span>n,<span class="k">this</span>},e(<span class="nb">document</span>).on(<span class="s2">"click.tab.data-api"</span>,<span class="s1">'[data-toggle="tab"], [data-toggle="pill"]'</span>,<span class="kd">function</span>(t){t.preventDefault(),e(<span class="k">this</span>).tab(<span class="s2">"show"</span>)})}(<span class="nb">window</span>.jQuery),<span class="o">!</span><span class="kd">function</span>(e){<span class="s2">"use strict"</span>;<span class="kd">var</span> t<span class="o">=</span><span class="kd">function</span>(t,n){<span class="k">this</span>.$element<span class="o">=</span>e(t),<span class="k">this</span>.options<span class="o">=</span>e.extend({},e.fn.typeahead.defaults,n),<span class="k">this</span>.matcher<span class="o">=</span><span class="k">this</span>.options.matcher<span class="o">||</span><span class="k">this</span>.matcher,<span class="k">this</span>.sorter<span class="o">=</span><span class="k">this</span>.options.sorter<span class="o">||</span><span class="k">this</span>.sorter,<span class="k">this</span>.highlighter<span class="o">=</span><span class="k">this</span>.options.highlighter<span class="o">||</span><span class="k">this</span>.highlighter,<span class="k">this</span>.updater<span class="o">=</span><span class="k">this</span>.options.updater<span class="o">||</span><span class="k">this</span>.updater,<span class="k">this</span>.source<span class="o">=</span><span class="k">this</span>.options.source,<span class="k">this</span>.$menu<span class="o">=</span>e(<span class="k">this</span>.options.menu),<span class="k">this</span>.shown<span class="o">=</span><span class="o">!</span><span class="mi">1</span>,<span class="k">this</span>.listen()};t.prototype<span class="o">=</span>{constructor<span class="o">:</span>t,select<span class="o">:</span><span class="kd">function</span>(){<span class="kd">var</span> e<span class="o">=</span><span class="k">this</span>.$menu.find(<span class="s2">".active"</span>).attr(<span class="s2">"data-value"</span>);<span class="k">return</span> <span class="k">this</span>.$element.val(<span class="k">this</span>.updater(e)).change(),<span class="k">this</span>.hide()},updater<span class="o">:</span><span class="kd">function</span>(e){<span class="k">return</span> e},show<span class="o">:</span><span class="kd">function</span>(){<span class="kd">var</span> t<span class="o">=</span>e.extend({},<span class="k">this</span>.$element.position(),{height<span class="o">:</span><span class="k">this</span>.$element[<span class="mi">0</span>].offsetHeight});<span class="k">return</span> <span class="k">this</span>.$menu.insertAfter(<span class="k">this</span>.$element).css({top<span class="o">:</span>t.top<span class="o">+</span>t.height,left<span class="o">:</span>t.left}).show(),<span class="k">this</span>.shown<span class="o">=</span><span class="o">!</span><span class="mi">0</span>,<span class="k">this</span>},hide<span class="o">:</span><span class="kd">function</span>(){<span class="k">return</span> <span class="k">this</span>.$menu.hide(),<span class="k">this</span>.shown<span class="o">=</span><span class="o">!</span><span class="mi">1</span>,<span class="k">this</span>},lookup<span class="o">:</span><span class="kd">function</span>(t){<span class="kd">var</span> n;<span class="k">return</span> <span class="k">this</span>.query<span class="o">=</span><span class="k">this</span>.$element.val(),<span class="o">!</span><span class="k">this</span>.query<span class="o">||</span><span class="k">this</span>.query.length<span class="o">&lt;</span><span class="k">this</span>.options.minLength<span class="o">?</span><span class="k">this</span>.shown<span class="o">?</span><span class="k">this</span>.hide()<span class="o">:</span><span class="k">this</span><span class="o">:</span>(n<span class="o">=</span>e.isFunction(<span class="k">this</span>.source)<span class="o">?</span><span class="k">this</span>.source(<span class="k">this</span>.query,e.proxy(<span class="k">this</span>.process,<span class="k">this</span>))<span class="o">:</span><span class="k">this</span>.source,n<span class="o">?</span><span class="k">this</span>.process(n)<span class="o">:</span><span class="k">this</span>)},process<span class="o">:</span><span class="kd">function</span>(t){<span class="kd">var</span> n<span class="o">=</span><span class="k">this</span>;<span class="k">return</span> t<span class="o">=</span>e.grep(t,<span class="kd">function</span>(e){<span class="k">return</span> n.matcher(e)}),t<span class="o">=</span><span class="k">this</span>.sorter(t),t.length<span class="o">?</span><span class="k">this</span>.render(t.slice(<span class="mi">0</span>,<span class="k">this</span>.options.items)).show()<span class="o">:</span><span class="k">this</span>.shown<span class="o">?</span><span class="k">this</span>.hide()<span class="o">:</span><span class="k">this</span>},matcher<span class="o">:</span><span class="kd">function</span>(e){<span class="k">return</span><span class="o">~</span>e.toLowerCase().indexOf(<span class="k">this</span>.query.toLowerCase())},sorter<span class="o">:</span><span class="kd">function</span>(e){<span class="kd">var</span> t<span class="o">=</span>[],n<span class="o">=</span>[],r<span class="o">=</span>[],i;<span class="k">while</span>(i<span class="o">=</span>e.shift())i.toLowerCase().indexOf(<span class="k">this</span>.query.toLowerCase())<span class="o">?</span><span class="o">~</span>i.indexOf(<span class="k">this</span>.query)<span class="o">?</span>n.push(i)<span class="o">:</span>r.push(i)<span class="o">:</span>t.push(i);<span class="k">return</span> t.concat(n,r)},highlighter<span class="o">:</span><span class="kd">function</span>(e){<span class="kd">var</span> t<span class="o">=</span><span class="k">this</span>.query.replace(<span class="sr">/[\-\[\]{}()*+?.,\\\^$|#\s]/g</span>,<span class="s2">"\\$&amp;"</span>);<span class="k">return</span> e.replace(<span class="k">new</span> <span class="nb">RegExp</span>(<span class="s2">"("</span><span class="o">+</span>t<span class="o">+</span><span class="s2">")"</span>,<span class="s2">"ig"</span>),<span class="kd">function</span>(e,t){<span class="k">return</span><span class="s2">"&lt;strong&gt;"</span><span class="o">+</span>t<span class="o">+</span><span class="s2">"&lt;/strong&gt;"</span>})},render<span class="o">:</span><span class="kd">function</span>(t){<span class="kd">var</span> n<span class="o">=</span><span class="k">this</span>;<span class="k">return</span> t<span class="o">=</span>e(t).map(<span class="kd">function</span>(t,r){<span class="k">return</span> t<span class="o">=</span>e(n.options.item).attr(<span class="s2">"data-value"</span>,r),t.find(<span class="s2">"a"</span>).html(n.highlighter(r)),t[<span class="mi">0</span>]}),t.first().addClass(<span class="s2">"active"</span>),<span class="k">this</span>.$menu.html(t),<span class="k">this</span>},next<span class="o">:</span><span class="kd">function</span>(t){<span class="kd">var</span> n<span class="o">=</span><span class="k">this</span>.$menu.find(<span class="s2">".active"</span>).removeClass(<span class="s2">"active"</span>),r<span class="o">=</span>n.next();r.length<span class="o">||</span>(r<span class="o">=</span>e(<span class="k">this</span>.$menu.find(<span class="s2">"li"</span>)[<span class="mi">0</span>])),r.addClass(<span class="s2">"active"</span>)},prev<span class="o">:</span><span class="kd">function</span>(e){<span class="kd">var</span> t<span class="o">=</span><span class="k">this</span>.$menu.find(<span class="s2">".active"</span>).removeClass(<span class="s2">"active"</span>),n<span class="o">=</span>t.prev();n.length<span class="o">||</span>(n<span class="o">=</span><span class="k">this</span>.$menu.find(<span class="s2">"li"</span>).last()),n.addClass(<span class="s2">"active"</span>)},listen<span class="o">:</span><span class="kd">function</span>(){<span class="k">this</span>.$element.on(<span class="s2">"focus"</span>,e.proxy(<span class="k">this</span>.focus,<span class="k">this</span>)).on(<span class="s2">"blur"</span>,e.proxy(<span class="k">this</span>.blur,<span class="k">this</span>)).on(<span class="s2">"keypress"</span>,e.proxy(<span class="k">this</span>.keypress,<span class="k">this</span>)).on(<span class="s2">"keyup"</span>,e.proxy(<span class="k">this</span>.keyup,<span class="k">this</span>)),<span class="k">this</span>.eventSupported(<span class="s2">"keydown"</span>)<span class="o">&amp;&amp;</span><span class="k">this</span>.$element.on(<span class="s2">"keydown"</span>,e.proxy(<span class="k">this</span>.keydown,<span class="k">this</span>)),<span class="k">this</span>.$menu.on(<span class="s2">"click"</span>,e.proxy(<span class="k">this</span>.click,<span class="k">this</span>)).on(<span class="s2">"mouseenter"</span>,<span class="s2">"li"</span>,e.proxy(<span class="k">this</span>.mouseenter,<span class="k">this</span>)).on(<span class="s2">"mouseleave"</span>,<span class="s2">"li"</span>,e.proxy(<span class="k">this</span>.mouseleave,<span class="k">this</span>))},eventSupported<span class="o">:</span><span class="kd">function</span>(e){<span class="kd">var</span> t<span class="o">=</span>e <span class="k">in</span> <span class="k">this</span>.$element;<span class="k">return</span> t<span class="o">||</span>(<span class="k">this</span>.$element.setAttribute(e,<span class="s2">"return;"</span>),t<span class="o">=</span><span class="k">typeof</span> <span class="k">this</span>.$element[e]<span class="o">==</span><span class="s2">"function"</span>),t},move<span class="o">:</span><span class="kd">function</span>(e){<span class="k">if</span>(<span class="o">!</span><span class="k">this</span>.shown)<span class="k">return</span>;<span class="k">switch</span>(e.keyCode){<span class="k">case</span> <span class="mi">9</span><span class="o">:</span><span class="k">case</span> <span class="mi">13</span><span class="o">:</span><span class="k">case</span> <span class="mi">27</span><span class="o">:</span>e.preventDefault();<span class="k">break</span>;<span class="k">case</span> <span class="mi">38</span><span class="o">:</span>e.preventDefault(),<span class="k">this</span>.prev();<span class="k">break</span>;<span class="k">case</span> <span class="mi">40</span><span class="o">:</span>e.preventDefault(),<span class="k">this</span>.next()}e.stopPropagation()},keydown<span class="o">:</span><span class="kd">function</span>(t){<span class="k">this</span>.suppressKeyPressRepeat<span class="o">=</span><span class="o">~</span>e.inArray(t.keyCode,[<span class="mi">40</span>,<span class="mi">38</span>,<span class="mi">9</span>,<span class="mi">13</span>,<span class="mi">27</span>]),<span class="k">this</span>.move(t)},keypress<span class="o">:</span><span class="kd">function</span>(e){<span class="k">if</span>(<span class="k">this</span>.suppressKeyPressRepeat)<span class="k">return</span>;<span class="k">this</span>.move(e)},keyup<span class="o">:</span><span class="kd">function</span>(e){<span class="k">switch</span>(e.keyCode){<span class="k">case</span> <span class="mi">40</span><span class="o">:</span><span class="k">case</span> <span class="mi">38</span><span class="o">:</span><span class="k">case</span> <span class="mi">16</span><span class="o">:</span><span class="k">case</span> <span class="mi">17</span><span class="o">:</span><span class="k">case</span> <span class="mi">18</span><span class="o">:</span><span class="k">break</span>;<span class="k">case</span> <span class="mi">9</span><span class="o">:</span><span class="k">case</span> <span class="mi">13</span><span class="o">:</span><span class="k">if</span>(<span class="o">!</span><span class="k">this</span>.shown)<span class="k">return</span>;<span class="k">this</span>.select();<span class="k">break</span>;<span class="k">case</span> <span class="mi">27</span><span class="o">:</span><span class="k">if</span>(<span class="o">!</span><span class="k">this</span>.shown)<span class="k">return</span>;<span class="k">this</span>.hide();<span class="k">break</span>;<span class="k">default</span><span class="o">:</span><span class="k">this</span>.lookup()}e.stopPropagation(),e.preventDefault()},focus<span class="o">:</span><span class="kd">function</span>(e){<span class="k">this</span>.focused<span class="o">=</span><span class="o">!</span><span class="mi">0</span>},blur<span class="o">:</span><span class="kd">function</span>(e){<span class="k">this</span>.focused<span class="o">=</span><span class="o">!</span><span class="mi">1</span>,<span class="o">!</span><span class="k">this</span>.mousedover<span class="o">&amp;&amp;</span><span class="k">this</span>.shown<span class="o">&amp;&amp;</span><span class="k">this</span>.hide()},click<span class="o">:</span><span class="kd">function</span>(e){e.stopPropagation(),e.preventDefault(),<span class="k">this</span>.select(),<span class="k">this</span>.$element.focus()},mouseenter<span class="o">:</span><span class="kd">function</span>(t){<span class="k">this</span>.mousedover<span class="o">=</span><span class="o">!</span><span class="mi">0</span>,<span class="k">this</span>.$menu.find(<span class="s2">".active"</span>).removeClass(<span class="s2">"active"</span>),e(t.currentTarget).addClass(<span class="s2">"active"</span>)},mouseleave<span class="o">:</span><span class="kd">function</span>(e){<span class="k">this</span>.mousedover<span class="o">=</span><span class="o">!</span><span class="mi">1</span>,<span class="o">!</span><span class="k">this</span>.focused<span class="o">&amp;&amp;</span><span class="k">this</span>.shown<span class="o">&amp;&amp;</span><span class="k">this</span>.hide()}};<span class="kd">var</span> n<span class="o">=</span>e.fn.typeahead;e.fn.typeahead<span class="o">=</span><span class="kd">function</span>(n){<span class="k">return</span> <span class="k">this</span>.each(<span class="kd">function</span>(){<span class="kd">var</span> r<span class="o">=</span>e(<span class="k">this</span>),i<span class="o">=</span>r.data(<span class="s2">"typeahead"</span>),s<span class="o">=</span><span class="k">typeof</span> n<span class="o">==</span><span class="s2">"object"</span><span class="o">&amp;&amp;</span>n;i<span class="o">||</span>r.data(<span class="s2">"typeahead"</span>,i<span class="o">=</span><span class="k">new</span> t(<span class="k">this</span>,s)),<span class="k">typeof</span> n<span class="o">==</span><span class="s2">"string"</span><span class="o">&amp;&amp;</span>i[n]()})},e.fn.typeahead.defaults<span class="o">=</span>{source<span class="o">:</span>[],items<span class="o">:</span><span class="mi">8</span>,menu<span class="o">:</span><span class="s1">'&lt;ul class="typeahead dropdown-menu"&gt;&lt;/ul&gt;'</span>,item<span class="o">:</span><span class="s1">'&lt;li&gt;&lt;a href="#"&gt;&lt;/a&gt;&lt;/li&gt;'</span>,minLength<span class="o">:</span><span class="mi">1</span>},e.fn.typeahead.Constructor<span class="o">=</span>t,e.fn.typeahead.noConflict<span class="o">=</span><span class="kd">function</span>(){<span class="k">return</span> e.fn.typeahead<span class="o">=</span>n,<span class="k">this</span>},e(<span class="nb">document</span>).on(<span class="s2">"focus.typeahead.data-api"</span>,<span class="s1">'[data-provide="typeahead"]'</span>,<span class="kd">function</span>(t){<span class="kd">var</span> n<span class="o">=</span>e(<span class="k">this</span>);<span class="k">if</span>(n.data(<span class="s2">"typeahead"</span>))<span class="k">return</span>;n.typeahead(n.data())})}(<span class="nb">window</span>.jQuery),<span class="o">!</span><span class="kd">function</span>(e){<span class="s2">"use strict"</span>;<span class="kd">var</span> t<span class="o">=</span><span class="kd">function</span>(t,n){<span class="k">this</span>.options<span class="o">=</span>e.extend({},e.fn.affix.defaults,n),<span class="k">this</span>.$window<span class="o">=</span>e(<span class="nb">window</span>).on(<span class="s2">"scroll.affix.data-api"</span>,e.proxy(<span class="k">this</span>.checkPosition,<span class="k">this</span>)).on(<span class="s2">"click.affix.data-api"</span>,e.proxy(<span class="kd">function</span>(){setTimeout(e.proxy(<span class="k">this</span>.checkPosition,<span class="k">this</span>),<span class="mi">1</span>)},<span class="k">this</span>)),<span class="k">this</span>.$element<span class="o">=</span>e(t),<span class="k">this</span>.checkPosition()};t.prototype.checkPosition<span class="o">=</span><span class="kd">function</span>(){<span class="k">if</span>(<span class="o">!</span><span class="k">this</span>.$element.is(<span class="s2">":visible"</span>))<span class="k">return</span>;<span class="kd">var</span> t<span class="o">=</span>e(<span class="nb">document</span>).height(),n<span class="o">=</span><span class="k">this</span>.$window.scrollTop(),r<span class="o">=</span><span class="k">this</span>.$element.offset(),i<span class="o">=</span><span class="k">this</span>.options.offset,s<span class="o">=</span>i.bottom,o<span class="o">=</span>i.top,u<span class="o">=</span><span class="s2">"affix affix-top affix-bottom"</span>,a;<span class="k">typeof</span> i<span class="o">!=</span><span class="s2">"object"</span><span class="o">&amp;&amp;</span>(s<span class="o">=</span>o<span class="o">=</span>i),<span class="k">typeof</span> o<span class="o">==</span><span class="s2">"function"</span><span class="o">&amp;&amp;</span>(o<span class="o">=</span>i.top()),<span class="k">typeof</span> s<span class="o">==</span><span class="s2">"function"</span><span class="o">&amp;&amp;</span>(s<span class="o">=</span>i.bottom()),a<span class="o">=</span><span class="k">this</span>.unpin<span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span>n<span class="o">+</span><span class="k">this</span>.unpin<span class="o">&lt;=</span>r.top<span class="o">?</span><span class="o">!</span><span class="mi">1</span><span class="o">:</span>s<span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span>r.top<span class="o">+</span><span class="k">this</span>.$element.height()<span class="o">&gt;=</span>t<span class="o">-</span>s<span class="o">?</span><span class="s2">"bottom"</span><span class="o">:</span>o<span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span>n<span class="o">&lt;=</span>o<span class="o">?</span><span class="s2">"top"</span><span class="o">:</span><span class="o">!</span><span class="mi">1</span>;<span class="k">if</span>(<span class="k">this</span>.affixed<span class="o">===</span>a)<span class="k">return</span>;<span class="k">this</span>.affixed<span class="o">=</span>a,<span class="k">this</span>.unpin<span class="o">=</span>a<span class="o">==</span><span class="s2">"bottom"</span><span class="o">?</span>r.top<span class="o">-</span>n<span class="o">:</span><span class="kc">null</span>,<span class="k">this</span>.$element.removeClass(u).addClass(<span class="s2">"affix"</span><span class="o">+</span>(a<span class="o">?</span><span class="s2">"-"</span><span class="o">+</span>a<span class="o">:</span><span class="s2">""</span>))};<span class="kd">var</span> n<span class="o">=</span>e.fn.affix;e.fn.affix<span class="o">=</span><span class="kd">function</span>(n){<span class="k">return</span> <span class="k">this</span>.each(<span class="kd">function</span>(){<span class="kd">var</span> r<span class="o">=</span>e(<span class="k">this</span>),i<span class="o">=</span>r.data(<span class="s2">"affix"</span>),s<span class="o">=</span><span class="k">typeof</span> n<span class="o">==</span><span class="s2">"object"</span><span class="o">&amp;&amp;</span>n;i<span class="o">||</span>r.data(<span class="s2">"affix"</span>,i<span class="o">=</span><span class="k">new</span> t(<span class="k">this</span>,s)),<span class="k">typeof</span> n<span class="o">==</span><span class="s2">"string"</span><span class="o">&amp;&amp;</span>i[n]()})},e.fn.affix.Constructor<span class="o">=</span>t,e.fn.affix.defaults<span class="o">=</span>{offset<span class="o">:</span><span class="mi">0</span>},e.fn.affix.noConflict<span class="o">=</span><span class="kd">function</span>(){<span class="k">return</span> e.fn.affix<span class="o">=</span>n,<span class="k">this</span>},e(<span class="nb">window</span>).on(<span class="s2">"load"</span>,<span class="kd">function</span>(){e(<span class="s1">'[data-spy="affix"]'</span>).each(<span class="kd">function</span>(){<span class="kd">var</span> t<span class="o">=</span>e(<span class="k">this</span>),n<span class="o">=</span>t.data();n.offset<span class="o">=</span>n.offset<span class="o">||</span>{},n.offsetBottom<span class="o">&amp;&amp;</span>(n.offset.bottom<span class="o">=</span>n.offsetBottom),n.offsetTop<span class="o">&amp;&amp;</span>(n.offset.top<span class="o">=</span>n.offsetTop),t.affix(n)})})}(<span class="nb">window</span>.jQuery);</pre></td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
    <script src="../../../_static/jquery-1.9.1.min.js"></script>
    <script src="../../../_static/bootstrap/js/bootstrap.min.js"></script>
  </body>
</html>
