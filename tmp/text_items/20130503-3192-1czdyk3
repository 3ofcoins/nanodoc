<!DOCTYPE html>
<html lang="en">
  <head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <title></title>
    <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
    <link href="../../../_static/bootstrap/css/bootstrap.css" rel="stylesheet">
    <style>
      body {
        padding-top: 60px; /* 60px to make the container go all the way to the bottom of the topbar */
      }
    </style>
    <link href="../../../_static/bootstrap/css/bootstrap-responsive.min.css" rel="stylesheet">
    <link href="../../../_static/pygments.css" rel="stylesheet">
    <link href="../../../_static/rocco.css" rel="stylesheet">
  </head>
  <body>
    <div class="navbar navbar-fixed-top">
      <div class="navbar-inner">
        <div class="container">
          <a class="btn btn-navbar" data-target=".nav-collapse" data-toggle="collapse">
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </a>
          <a class="brand" href="../../../">nanodoc</a>
        </div>
      </div>
    </div>
    <div class="container-fluid">
      <div class="row-fluid">
        <div class="span12">
          <ul class="breadcrumb">
            <li>
              <a href="../../../">nanodoc</a>
              <span class="divider">/</span>
            </li>
            <li>
              <a href="../../">lib</a>
              <span class="divider">/</span>
            </li>
            <li>
              <a href="../">nanodoc</a>
              <span class="divider">/</span>
            </li>
            <li class="active">pygments.rb</li>
          </ul>
        </div>
      </div>
      <div class="row-fluid">
        <div class="span2 well well-small">
          <ul class="nav nav-list">
            <li>
              <a href="../filters/">
                <i class="icon-folder-open"></i>
                filters
              </a>
            </li>
            <li>
              <a href="../cli.rb/">
                <i class="icon-file"></i>
                cli.rb
              </a>
            </li>
            <li>
              <a href="../data_source.rb/">
                <i class="icon-file"></i>
                data_source.rb
              </a>
            </li>
            <li>
              <a href="../filters.rb/">
                <i class="icon-file"></i>
                filters.rb
              </a>
            </li>
            <li>
              <a href="../helpers.rb/">
                <i class="icon-file"></i>
                helpers.rb
              </a>
            </li>
            <li>
              <a href="../item_ext.rb/">
                <i class="icon-file"></i>
                item_ext.rb
              </a>
            </li>
            <li class="active">
              <i class="icon-hand-right"></i>
              <b>pygments.rb</b>
            </li>
            <li>
              <a href="../pygments2json.py/">
                <i class="icon-file"></i>
                pygments2json.py
              </a>
            </li>
            <li>
              <a href="../site.rb/">
                <i class="icon-file"></i>
                site.rb
              </a>
            </li>
            <li>
              <a href="../util.rb/">
                <i class="icon-file"></i>
                util.rb
              </a>
            </li>
            <li>
              <a href="../version.rb/">
                <i class="icon-file"></i>
                version.rb
              </a>
            </li>
          </ul>
        </div>
        <div class="span10">
          <table class="table">
            <tbody>
              <tr id="line-1">
                <td colspan="1">
                  <div class="pilwrap">
                    <a class="pilcrow" href="#line-1">
                      1
                      ¶
                    </a>
                  </div>
                  
                </td>
                <td class="code"><pre><span class="nb">require</span> <span class="s1">'pathname'</span>

<span class="nb">require</span> <span class="s1">'multi_json'</span>
<span class="nb">require</span> <span class="s1">'nanoc'</span>

<span class="k">module</span> <span class="nn">Nanodoc</span>
  <span class="k">class</span> <span class="nc">Pygments</span> <span class="o">&lt;</span> <span class="o">::</span><span class="ss">Nanoc</span>:<span class="ss">:Store</span>
    <span class="no">PYGMENTS2JSON</span> <span class="o">=</span> <span class="no">Pathname</span><span class="o">.</span>new(<span class="bp">__FILE__</span>)<span class="o">.</span>dirname<span class="o">.</span>join(<span class="s1">'pygments2json.py'</span>)</pre></td>
              </tr>
              <tr id="line-10">
                <td colspan="1">
                  <div class="pilwrap">
                    <a class="pilcrow" href="#line-10">
                      10
                      ¶
                    </a>
                  </div>
                  <h2 id="initializeitem">initialize(item)</h2>
                  <p><code>item</code> can be a <code>Nanoc::Item</code>, a <code>Pathname</code>, or a string with
                  path to file.</p>
                </td>
                <td class="code"><pre>    <span class="k">def</span> <span class="nf">initialize</span>(item)
      item <span class="o">=</span> <span class="no">Pathname</span><span class="o">.</span>new(item) <span class="k">if</span> item<span class="o">.</span>is_a?(<span class="nb">String</span>)
      <span class="k">if</span> item<span class="o">.</span>is_a?(<span class="no">Pathname</span>)
        item <span class="o">=</span> item<span class="o">.</span>realpath
        item <span class="o">=</span> <span class="ss">Nanoc</span>:<span class="ss">:Item</span><span class="o">.</span>new(
          item<span class="o">.</span>read, {<span class="ss">:filename</span> <span class="o">=</span><span class="o">&gt;</span> item<span class="o">.</span>to_s }, <span class="s2">"</span><span class="si">#{</span>item<span class="si">}</span><span class="s2">/</span><span class="s2">"</span>,
          <span class="ss">:binary</span> <span class="o">=</span><span class="o">&gt;</span> <span class="kp">false</span>, <span class="ss">:mtime</span> <span class="o">=</span><span class="o">&gt;</span> item<span class="o">.</span>stat<span class="o">.</span>mtime)
      <span class="k">end</span>

      <span class="vi">@item</span> <span class="o">=</span> item
      <span class="vi">@parsed</span> <span class="o">=</span> <span class="kp">nil</span>

      <span class="k">super</span>(<span class="s2">"</span><span class="s2">tmp/pygments</span><span class="si">#{</span>item<span class="o">.</span>identifier<span class="si">}</span><span class="s2">parsed</span><span class="s2">"</span>, <span class="mi">1</span>)
    <span class="k">end</span></pre></td>
              </tr>
              <tr id="line-29">
                <td colspan="1">
                  <div class="pilwrap">
                    <a class="pilcrow" href="#line-29">
                      29
                      ¶
                    </a>
                  </div>
                  <h2 id="parsed">parsed()</h2>
                  <p>Returns an array parsed by Pygments. Each of the elements is an
                  array of form: <code>[ string, token_type, css_class ]</code> (<code>css_class</code>
                  may be omitted; in this case, text shouldn’t be formatted with
                  any class).</p>
                </td>
                <td class="code"><pre>    <span class="k">def</span> <span class="nf">parsed</span>
      <span class="nb">load</span>
      <span class="k">unless</span> <span class="vi">@parsed</span>
        <span class="vi">@parsed</span> <span class="o">=</span> <span class="no">MultiJson</span><span class="o">.</span>load(<span class="sb">`</span><span class="sb">pygmentize -f tokens </span><span class="si">#{</span><span class="vi">@item</span><span class="o">[</span><span class="ss">:filename</span><span class="o">]</span><span class="si">}</span><span class="sb"> | </span><span class="si">#{</span><span class="no">PYGMENTS2JSON</span><span class="si">}</span><span class="sb">`</span>)<span class="o">.</span>map(<span class="o">&amp;</span><span class="ss">:compact</span>)
        store
      <span class="k">end</span>
      <span class="vi">@parsed</span>
    <span class="k">end</span>

    <span class="kp">protected</span>

    <span class="k">def</span> <span class="nf">data</span>
      <span class="o">[</span> <span class="vi">@item</span><span class="o">.</span>mtime, parsed <span class="o">]</span>
    <span class="k">end</span>

    <span class="k">def</span> <span class="nf">data</span><span class="o">=</span>(new_data)
      mtime, parsed <span class="o">=</span> new_data
      <span class="vi">@parsed</span> <span class="o">=</span> parsed <span class="k">if</span> mtime <span class="o">==</span> <span class="vi">@item</span><span class="o">.</span>mtime
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span></pre></td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
    <script src="../../../_static/jquery-1.9.1.min.js"></script>
    <script src="../../../_static/bootstrap/js/bootstrap.min.js"></script>
  </body>
</html>
